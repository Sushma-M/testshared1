/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * IncidenceEmployee generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`incidence_employee`")
public class IncidenceEmployee implements Serializable {

    private Integer idIncidenceEmployee;
    private Date incidenceDate;
    private String observation;
    private Integer userLocation;
    private Integer userMode;
    private Date userFecha;
    private Employee employee;
    private TypeIncident typeIncident;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_incidence_employee`", nullable = false, scale = 0, precision = 10)
    public Integer getIdIncidenceEmployee() {
        return this.idIncidenceEmployee;
    }

    public void setIdIncidenceEmployee(Integer idIncidenceEmployee) {
        this.idIncidenceEmployee = idIncidenceEmployee;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`incidence_date`", nullable = false)
    public Date getIncidenceDate() {
        return this.incidenceDate;
    }

    public void setIncidenceDate(Date incidenceDate) {
        this.incidenceDate = incidenceDate;
    }

    @Column(name = "`observation`", nullable = false, length = 255)
    public String getObservation() {
        return this.observation;
    }

    public void setObservation(String observation) {
        this.observation = observation;
    }

    @Column(name = "`user_location`", nullable = false, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_employee`", referencedColumnName = "`id_employee`", insertable = true, updatable = true)
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_type_incident`", referencedColumnName = "`id_type_incident`", insertable = true, updatable = true)
    public TypeIncident getTypeIncident() {
        return this.typeIncident;
    }

    public void setTypeIncident(TypeIncident typeIncident) {
        this.typeIncident = typeIncident;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof IncidenceEmployee)) return false;
        final IncidenceEmployee incidenceEmployee = (IncidenceEmployee) o;
        return Objects.equals(getIdIncidenceEmployee(), incidenceEmployee.getIdIncidenceEmployee());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdIncidenceEmployee());
    }
}

