/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * EmployeeLaborHistory generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`employee_labor_history`")
public class EmployeeLaborHistory implements Serializable {

    private Integer idEmployeeLaborHistory;
    private String charge;
    private String institution;
    private Date startDate;
    private Date finalDate;
    private String occasionOfRetirement;
    private Integer userLocation;
    private Integer userMode;
    private Date userFecha;
    private Employee employee;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_employee_labor_history`", nullable = false, scale = 0, precision = 10)
    public Integer getIdEmployeeLaborHistory() {
        return this.idEmployeeLaborHistory;
    }

    public void setIdEmployeeLaborHistory(Integer idEmployeeLaborHistory) {
        this.idEmployeeLaborHistory = idEmployeeLaborHistory;
    }

    @Column(name = "`charge`", nullable = false, length = 100)
    public String getCharge() {
        return this.charge;
    }

    public void setCharge(String charge) {
        this.charge = charge;
    }

    @Column(name = "`institution`", nullable = false, length = 150)
    public String getInstitution() {
        return this.institution;
    }

    public void setInstitution(String institution) {
        this.institution = institution;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`start_date`", nullable = true)
    public Date getStartDate() {
        return this.startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`final_date`", nullable = true)
    public Date getFinalDate() {
        return this.finalDate;
    }

    public void setFinalDate(Date finalDate) {
        this.finalDate = finalDate;
    }

    @Column(name = "`occasion_of_retirement`", nullable = false, length = 100)
    public String getOccasionOfRetirement() {
        return this.occasionOfRetirement;
    }

    public void setOccasionOfRetirement(String occasionOfRetirement) {
        this.occasionOfRetirement = occasionOfRetirement;
    }

    @Column(name = "`user_location`", nullable = false, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_employee`", referencedColumnName = "`id_employee`", insertable = true, updatable = true)
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof EmployeeLaborHistory)) return false;
        final EmployeeLaborHistory employeeLaborHistory = (EmployeeLaborHistory) o;
        return Objects.equals(getIdEmployeeLaborHistory(), employeeLaborHistory.getIdEmployeeLaborHistory());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdEmployeeLaborHistory());
    }
}

