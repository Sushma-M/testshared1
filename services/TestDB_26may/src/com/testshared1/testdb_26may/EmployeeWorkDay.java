/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * EmployeeWorkDay generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`employee_work_day`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`fk_employee`", "`work_date`"})})
public class EmployeeWorkDay implements Serializable {

    private Integer idEmployeeWorkDay;
    private Date workDate;
    private Double totalHoursWorked;
    private Double totalOvertime;
    private Double totalHoursLate;
    private Integer userLocation;
    private Integer userMode;
    private Date userFecha;
    private Employee employee;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_employee_work_day`", nullable = false, scale = 0, precision = 10)
    public Integer getIdEmployeeWorkDay() {
        return this.idEmployeeWorkDay;
    }

    public void setIdEmployeeWorkDay(Integer idEmployeeWorkDay) {
        this.idEmployeeWorkDay = idEmployeeWorkDay;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`work_date`", nullable = false)
    public Date getWorkDate() {
        return this.workDate;
    }

    public void setWorkDate(Date workDate) {
        this.workDate = workDate;
    }

    @Column(name = "`total_hours_worked`", nullable = false, scale = 4, precision = 19)
    public Double getTotalHoursWorked() {
        return this.totalHoursWorked;
    }

    public void setTotalHoursWorked(Double totalHoursWorked) {
        this.totalHoursWorked = totalHoursWorked;
    }

    @Column(name = "`total_overtime`", nullable = false, scale = 4, precision = 19)
    public Double getTotalOvertime() {
        return this.totalOvertime;
    }

    public void setTotalOvertime(Double totalOvertime) {
        this.totalOvertime = totalOvertime;
    }

    @Column(name = "`total_hours_late`", nullable = false, scale = 4, precision = 19)
    public Double getTotalHoursLate() {
        return this.totalHoursLate;
    }

    public void setTotalHoursLate(Double totalHoursLate) {
        this.totalHoursLate = totalHoursLate;
    }

    @Column(name = "`user_location`", nullable = false, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_employee`", referencedColumnName = "`id_employee`", insertable = true, updatable = true)
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof EmployeeWorkDay)) return false;
        final EmployeeWorkDay employeeWorkDay = (EmployeeWorkDay) o;
        return Objects.equals(getIdEmployeeWorkDay(), employeeWorkDay.getIdEmployeeWorkDay());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdEmployeeWorkDay());
    }
}

