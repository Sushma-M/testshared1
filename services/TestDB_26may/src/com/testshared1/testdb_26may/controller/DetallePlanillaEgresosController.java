/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;

import com.testshared1.testdb_26may.DetallePlanillaEgresos;
import com.testshared1.testdb_26may.DetallePlanillaEgresosId;
import com.testshared1.testdb_26may.service.DetallePlanillaEgresosService;


/**
 * Controller object for domain model class DetallePlanillaEgresos.
 * @see DetallePlanillaEgresos
 */
@RestController("TestDB_26may.DetallePlanillaEgresosController")
@Api(value = "/TestDB_26may/DetallePlanillaEgresos", description = "Exposes APIs to work with DetallePlanillaEgresos resource.")
@RequestMapping("/TestDB_26may/DetallePlanillaEgresos")
public class DetallePlanillaEgresosController {

    private static final Logger LOGGER = LoggerFactory.getLogger(DetallePlanillaEgresosController.class);

    @Autowired
	@Qualifier("TestDB_26may.DetallePlanillaEgresosService")
	private DetallePlanillaEgresosService detallePlanillaEgresosService;


    @RequestMapping(value = "/composite-id", method = RequestMethod.GET)
    @ApiOperation(value = "Returns the DetallePlanillaEgresos instance associated with the given composite-id.")
    public DetallePlanillaEgresos getDetallePlanillaEgresos(@RequestParam("idPayrollDetail") Integer idPayrollDetail,@RequestParam("type_") String type_,@RequestParam("code") String code,@RequestParam("description_") String description_,@RequestParam("currency") String currency,@RequestParam("value_") Double value_) throws EntityNotFoundException {

DetallePlanillaEgresosId detalleplanillaegresosId = new DetallePlanillaEgresosId();
    detalleplanillaegresosId.setIdPayrollDetail(idPayrollDetail);
    detalleplanillaegresosId.setType_(type_);
    detalleplanillaegresosId.setCode(code);
    detalleplanillaegresosId.setDescription_(description_);
    detalleplanillaegresosId.setCurrency(currency);
    detalleplanillaegresosId.setValue_(value_);

        LOGGER.debug("Getting DetallePlanillaEgresos with id: {}" , detalleplanillaegresosId);
        DetallePlanillaEgresos detalleplanillaegresos = detallePlanillaEgresosService.getById(detalleplanillaegresosId);
        LOGGER.debug("DetallePlanillaEgresos details with id: {}" , detalleplanillaegresos);

        return detalleplanillaegresos;
    }


    /**
     * @deprecated Use {@link #findDetallePlanillaEgresos(String)} instead.
     */
    @Deprecated
    @RequestMapping(value = "/search", method = RequestMethod.POST)
	@ApiOperation(value = "Returns the list of DetallePlanillaEgresos instances matching the search criteria.")
	public Page<DetallePlanillaEgresos> findDetallePlanillaEgresos( Pageable pageable, @RequestBody QueryFilter[] queryFilters) {
		LOGGER.debug("Rendering DetallePlanillaEgresos list");
		return detallePlanillaEgresosService.findAll(queryFilters, pageable);
	}

    @RequestMapping(method = RequestMethod.GET)
    @ApiOperation(value = "Returns the list of DetallePlanillaEgresos instances matching the search criteria.")
    public Page<DetallePlanillaEgresos> findDetallePlanillaEgresos(@RequestParam(value = "q", required = false) String query, Pageable pageable) {
        LOGGER.debug("Rendering DetallePlanillaEgresos list");
    	return detallePlanillaEgresosService.findAll(query, pageable);
    }

    @RequestMapping(value = "/export/{exportType}", method = RequestMethod.GET, produces = "application/octet-stream")
    @ApiOperation(value = "Returns downloadable file for the data.")
    public Downloadable exportDetallePlanillaEgresos(@PathVariable("exportType") ExportType exportType, @RequestParam(value = "q", required = false) String query, Pageable pageable) {
         return detallePlanillaEgresosService.export(exportType, query, pageable);
    }

	@RequestMapping(value = "/count", method = RequestMethod.GET)
	@ApiOperation(value = "Returns the total count of DetallePlanillaEgresos instances.")
	public Long countDetallePlanillaEgresos(@RequestParam(value = "q", required = false) String query) {
		LOGGER.debug("counting DetallePlanillaEgresos");
		return detallePlanillaEgresosService.count(query);
	}


    /**
	 * This setter method should only be used by unit tests
	 *
	 * @param service DetallePlanillaEgresosService instance
	 */
	protected void setDetallePlanillaEgresosService(DetallePlanillaEgresosService service) {
		this.detallePlanillaEgresosService = service;
	}

}

