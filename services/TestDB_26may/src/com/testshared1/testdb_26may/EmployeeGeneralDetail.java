/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * EmployeeGeneralDetail generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`employee_general_detail`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`fk_employee`"})})
public class EmployeeGeneralDetail implements Serializable {

    private Integer idEmployeeGeneralDetail;
    private String socialSecurity;
    private String cityResidence;
    private String addressResidence;
    private String personalPhone;
    private String personalMobileNumber;
    private Integer dependentNumber;
    private Double monthlyFinancialClaim;
    private String termsOfRecruitment;
    private Integer userLocation;
    private Integer userMode;
    private Date userFecha;
    private Country country;
    private Employee employee;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_employee_general_detail`", nullable = false, scale = 0, precision = 10)
    public Integer getIdEmployeeGeneralDetail() {
        return this.idEmployeeGeneralDetail;
    }

    public void setIdEmployeeGeneralDetail(Integer idEmployeeGeneralDetail) {
        this.idEmployeeGeneralDetail = idEmployeeGeneralDetail;
    }

    @Column(name = "`social_security`", nullable = true, length = 32)
    public String getSocialSecurity() {
        return this.socialSecurity;
    }

    public void setSocialSecurity(String socialSecurity) {
        this.socialSecurity = socialSecurity;
    }

    @Column(name = "`city_residence`", nullable = false, length = 100)
    public String getCityResidence() {
        return this.cityResidence;
    }

    public void setCityResidence(String cityResidence) {
        this.cityResidence = cityResidence;
    }

    @Column(name = "`address_residence`", nullable = false, length = 100)
    public String getAddressResidence() {
        return this.addressResidence;
    }

    public void setAddressResidence(String addressResidence) {
        this.addressResidence = addressResidence;
    }

    @Column(name = "`personal_phone`", nullable = true, length = 12)
    public String getPersonalPhone() {
        return this.personalPhone;
    }

    public void setPersonalPhone(String personalPhone) {
        this.personalPhone = personalPhone;
    }

    @Column(name = "`personal_mobile_number`", nullable = true, length = 12)
    public String getPersonalMobileNumber() {
        return this.personalMobileNumber;
    }

    public void setPersonalMobileNumber(String personalMobileNumber) {
        this.personalMobileNumber = personalMobileNumber;
    }

    @Column(name = "`dependent_number`", nullable = true, scale = 0, precision = 10)
    public Integer getDependentNumber() {
        return this.dependentNumber;
    }

    public void setDependentNumber(Integer dependentNumber) {
        this.dependentNumber = dependentNumber;
    }

    @Column(name = "`monthly_financial_claim`", nullable = true, scale = 4, precision = 19)
    public Double getMonthlyFinancialClaim() {
        return this.monthlyFinancialClaim;
    }

    public void setMonthlyFinancialClaim(Double monthlyFinancialClaim) {
        this.monthlyFinancialClaim = monthlyFinancialClaim;
    }

    @Column(name = "`terms_of_recruitment`", nullable = false, length = 4096)
    public String getTermsOfRecruitment() {
        return this.termsOfRecruitment;
    }

    public void setTermsOfRecruitment(String termsOfRecruitment) {
        this.termsOfRecruitment = termsOfRecruitment;
    }

    @Column(name = "`user_location`", nullable = false, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_country_residence`", referencedColumnName = "`id_country`", insertable = true, updatable = true)
    public Country getCountry() {
        return this.country;
    }

    public void setCountry(Country country) {
        this.country = country;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_employee`", referencedColumnName = "`id_employee`", insertable = true, updatable = true)
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof EmployeeGeneralDetail)) return false;
        final EmployeeGeneralDetail employeeGeneralDetail = (EmployeeGeneralDetail) o;
        return Objects.equals(getIdEmployeeGeneralDetail(), employeeGeneralDetail.getIdEmployeeGeneralDetail());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdEmployeeGeneralDetail());
    }
}

