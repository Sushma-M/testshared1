/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Loan generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`loan`")
public class Loan implements Serializable {

    private Integer idLoan;
    private String reason;
    private Date loanDate;
    private Boolean collectedLoanWorksheet;
    private Boolean loanPaid;
    private Boolean externalLoan;
    private Double fixedQuota;
    private Double interestRate;
    private Integer quantityPeriods;
    private Double loanEntireValue;
    private String observation;
    private Integer userLocation;
    private Integer userMode;
    private Date userFecha;
    private List<ListLoanDetailPayroll> listLoanDetailPayrolls = new ArrayList<>();
    private Currency currency;
    private Employee employee;
    private List<PaymentLoanManual> paymentLoanManuals = new ArrayList<>();

    @Id
    @Column(name = "`id_loan`", nullable = false, scale = 0, precision = 10)
    public Integer getIdLoan() {
        return this.idLoan;
    }

    public void setIdLoan(Integer idLoan) {
        this.idLoan = idLoan;
    }

    @Column(name = "`reason`", nullable = false, length = 50)
    public String getReason() {
        return this.reason;
    }

    public void setReason(String reason) {
        this.reason = reason;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`loan_date`", nullable = false)
    public Date getLoanDate() {
        return this.loanDate;
    }

    public void setLoanDate(Date loanDate) {
        this.loanDate = loanDate;
    }

    @Column(name = "`collected_loan_worksheet`", nullable = false)
    public Boolean isCollectedLoanWorksheet() {
        return this.collectedLoanWorksheet;
    }

    public void setCollectedLoanWorksheet(Boolean collectedLoanWorksheet) {
        this.collectedLoanWorksheet = collectedLoanWorksheet;
    }

    @Column(name = "`loan_paid`", nullable = false)
    public Boolean isLoanPaid() {
        return this.loanPaid;
    }

    public void setLoanPaid(Boolean loanPaid) {
        this.loanPaid = loanPaid;
    }

    @Column(name = "`external_loan`", nullable = false)
    public Boolean isExternalLoan() {
        return this.externalLoan;
    }

    public void setExternalLoan(Boolean externalLoan) {
        this.externalLoan = externalLoan;
    }

    @Column(name = "`fixed_quota`", nullable = false, scale = 4, precision = 19)
    public Double getFixedQuota() {
        return this.fixedQuota;
    }

    public void setFixedQuota(Double fixedQuota) {
        this.fixedQuota = fixedQuota;
    }

    @Column(name = "`interest_rate`", nullable = false, scale = 4, precision = 19)
    public Double getInterestRate() {
        return this.interestRate;
    }

    public void setInterestRate(Double interestRate) {
        this.interestRate = interestRate;
    }

    @Column(name = "`quantity_periods`", nullable = false, scale = 0, precision = 10)
    public Integer getQuantityPeriods() {
        return this.quantityPeriods;
    }

    public void setQuantityPeriods(Integer quantityPeriods) {
        this.quantityPeriods = quantityPeriods;
    }

    @Column(name = "`loan_entire_value`", nullable = false, scale = 4, precision = 19)
    public Double getLoanEntireValue() {
        return this.loanEntireValue;
    }

    public void setLoanEntireValue(Double loanEntireValue) {
        this.loanEntireValue = loanEntireValue;
    }

    @Column(name = "`observation`", nullable = true, length = 255)
    public String getObservation() {
        return this.observation;
    }

    public void setObservation(String observation) {
        this.observation = observation;
    }

    @Column(name = "`user_location`", nullable = false, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "loan")
    public List<ListLoanDetailPayroll> getListLoanDetailPayrolls() {
        return this.listLoanDetailPayrolls;
    }

    public void setListLoanDetailPayrolls(List<ListLoanDetailPayroll> listLoanDetailPayrolls) {
        this.listLoanDetailPayrolls = listLoanDetailPayrolls;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_currency`", referencedColumnName = "`id_currency`", insertable = true, updatable = true)
    public Currency getCurrency() {
        return this.currency;
    }

    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_employee`", referencedColumnName = "`id_employee`", insertable = true, updatable = true)
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "loan")
    public List<PaymentLoanManual> getPaymentLoanManuals() {
        return this.paymentLoanManuals;
    }

    public void setPaymentLoanManuals(List<PaymentLoanManual> paymentLoanManuals) {
        this.paymentLoanManuals = paymentLoanManuals;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Loan)) return false;
        final Loan loan = (Loan) o;
        return Objects.equals(getIdLoan(), loan.getIdLoan());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdLoan());
    }
}

