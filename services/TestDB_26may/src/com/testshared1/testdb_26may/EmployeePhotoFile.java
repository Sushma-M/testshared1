/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * EmployeePhotoFile generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`employee_photo_file`")
public class EmployeePhotoFile implements Serializable {

    private Integer idEmployeePhotoFile;
    private String fileName;
    private String mimeType;
    @JsonIgnore
    private byte[] attachment;
    private Integer userLocation;
    private Integer userMode;
    private Date userFecha;
    private Employee employee;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_employee_photo_file`", nullable = false, scale = 0, precision = 10)
    public Integer getIdEmployeePhotoFile() {
        return this.idEmployeePhotoFile;
    }

    public void setIdEmployeePhotoFile(Integer idEmployeePhotoFile) {
        this.idEmployeePhotoFile = idEmployeePhotoFile;
    }

    @Column(name = "`file_name`", nullable = false, length = 150)
    public String getFileName() {
        return this.fileName;
    }

    public void setFileName(String fileName) {
        this.fileName = fileName;
    }

    @Column(name = "`mime_type`", nullable = false, length = 150)
    public String getMimeType() {
        return this.mimeType;
    }

    public void setMimeType(String mimeType) {
        this.mimeType = mimeType;
    }

    @Column(name = "`attachment`", nullable = false)
    public byte[] getAttachment() {
        return this.attachment;
    }

    public void setAttachment(byte[] attachment) {
        this.attachment = attachment;
    }

    @Column(name = "`user_location`", nullable = false, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_employee`", referencedColumnName = "`id_employee`", insertable = true, updatable = true)
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof EmployeePhotoFile)) return false;
        final EmployeePhotoFile employeePhotoFile = (EmployeePhotoFile) o;
        return Objects.equals(getIdEmployeePhotoFile(), employeePhotoFile.getIdEmployeePhotoFile());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdEmployeePhotoFile());
    }
}

