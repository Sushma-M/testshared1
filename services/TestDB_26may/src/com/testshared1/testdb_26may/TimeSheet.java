/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

/**
 * TimeSheet generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`time_sheet`")
public class TimeSheet implements Serializable {

    private Integer idTimeSheet;
    private String ipMarked;
    @Type(type = "DateTime")
    private LocalDateTime markedTime;
    private Integer userLocation;
    private Integer userMode;
    private Date userFecha;
    private Employee employee;
    private TypeOperationTimesheet typeOperationTimesheet;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_time_sheet`", nullable = false, scale = 0, precision = 10)
    public Integer getIdTimeSheet() {
        return this.idTimeSheet;
    }

    public void setIdTimeSheet(Integer idTimeSheet) {
        this.idTimeSheet = idTimeSheet;
    }

    @Column(name = "`ip_marked`", nullable = false, length = 18)
    public String getIpMarked() {
        return this.ipMarked;
    }

    public void setIpMarked(String ipMarked) {
        this.ipMarked = ipMarked;
    }

    @Column(name = "`marked_time`", nullable = false)
    public LocalDateTime getMarkedTime() {
        return this.markedTime;
    }

    public void setMarkedTime(LocalDateTime markedTime) {
        this.markedTime = markedTime;
    }

    @Column(name = "`user_location`", nullable = false, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_employee`", referencedColumnName = "`id_employee`", insertable = true, updatable = true)
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_type_operation_timesheet`", referencedColumnName = "`id_type_operation_timesheet`", insertable = true, updatable = true)
    public TypeOperationTimesheet getTypeOperationTimesheet() {
        return this.typeOperationTimesheet;
    }

    public void setTypeOperationTimesheet(TypeOperationTimesheet typeOperationTimesheet) {
        this.typeOperationTimesheet = typeOperationTimesheet;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TimeSheet)) return false;
        final TimeSheet timeSheet = (TimeSheet) o;
        return Objects.equals(getIdTimeSheet(), timeSheet.getIdTimeSheet());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdTimeSheet());
    }
}

