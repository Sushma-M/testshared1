/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Bank generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`bank`")
public class Bank implements Serializable {

    private Integer idBank;
    private String name;
    private String contact;
    private String direction;
    private String noSwift;
    private String observation;
    private Integer userMode;
    private Date userFecha;
    private List<EmployeeSalary> employeeSalaries = new ArrayList<>();

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_bank`", nullable = false, scale = 0, precision = 10)
    public Integer getIdBank() {
        return this.idBank;
    }

    public void setIdBank(Integer idBank) {
        this.idBank = idBank;
    }

    @Column(name = "`name`", nullable = false, length = 50)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "`contact`", nullable = false, length = 64)
    public String getContact() {
        return this.contact;
    }

    public void setContact(String contact) {
        this.contact = contact;
    }

    @Column(name = "`direction`", nullable = false, length = 64)
    public String getDirection() {
        return this.direction;
    }

    public void setDirection(String direction) {
        this.direction = direction;
    }

    @Column(name = "`no_swift`", nullable = false, length = 24)
    public String getNoSwift() {
        return this.noSwift;
    }

    public void setNoSwift(String noSwift) {
        this.noSwift = noSwift;
    }

    @Column(name = "`observation`", nullable = true, length = 150)
    public String getObservation() {
        return this.observation;
    }

    public void setObservation(String observation) {
        this.observation = observation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "bank")
    public List<EmployeeSalary> getEmployeeSalaries() {
        return this.employeeSalaries;
    }

    public void setEmployeeSalaries(List<EmployeeSalary> employeeSalaries) {
        this.employeeSalaries = employeeSalaries;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Bank)) return false;
        final Bank bank = (Bank) o;
        return Objects.equals(getIdBank(), bank.getIdBank());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdBank());
    }
}

