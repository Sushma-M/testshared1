/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AssessmentField generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`assessment_field`")
public class AssessmentField implements Serializable {

    private Integer idAssessmentField;
    private String description_;
    private Float weight;
    private String code;
    private Integer userMode;
    private Date userFecha;
    private List<AssessmentEmployeeData> assessmentEmployeeDatas = new ArrayList<>();
    private Assessment assessment;
    private WorkPositionPerformanceIndicator workPositionPerformanceIndicator;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_assessment_field`", nullable = false, scale = 0, precision = 10)
    public Integer getIdAssessmentField() {
        return this.idAssessmentField;
    }

    public void setIdAssessmentField(Integer idAssessmentField) {
        this.idAssessmentField = idAssessmentField;
    }

    @Column(name = "`description?`", nullable = false, length = 96)
    public String getDescription_() {
        return this.description_;
    }

    public void setDescription_(String description_) {
        this.description_ = description_;
    }

    @Column(name = "`weight`", nullable = false, scale = 2, precision = 4)
    public Float getWeight() {
        return this.weight;
    }

    public void setWeight(Float weight) {
        this.weight = weight;
    }

    @Column(name = "`code`", nullable = true, length = 4)
    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "assessmentField")
    public List<AssessmentEmployeeData> getAssessmentEmployeeDatas() {
        return this.assessmentEmployeeDatas;
    }

    public void setAssessmentEmployeeDatas(List<AssessmentEmployeeData> assessmentEmployeeDatas) {
        this.assessmentEmployeeDatas = assessmentEmployeeDatas;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_assessment`", referencedColumnName = "`id_assessment`", insertable = true, updatable = true)
    public Assessment getAssessment() {
        return this.assessment;
    }

    public void setAssessment(Assessment assessment) {
        this.assessment = assessment;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_work_position_performance_indicator`", referencedColumnName = "`id_work_position_performance_indicator`", insertable = true, updatable = true)
    public WorkPositionPerformanceIndicator getWorkPositionPerformanceIndicator() {
        return this.workPositionPerformanceIndicator;
    }

    public void setWorkPositionPerformanceIndicator(WorkPositionPerformanceIndicator workPositionPerformanceIndicator) {
        this.workPositionPerformanceIndicator = workPositionPerformanceIndicator;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AssessmentField)) return false;
        final AssessmentField assessmentField = (AssessmentField) o;
        return Objects.equals(getIdAssessmentField(), assessmentField.getIdAssessmentField());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdAssessmentField());
    }
}

