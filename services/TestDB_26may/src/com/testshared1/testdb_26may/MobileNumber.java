/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * MobileNumber generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`mobile_number`")
public class MobileNumber implements Serializable {

    private Integer idCellphone;
    private Double companyValueBond;
    private String number;
    private String observation;
    private Integer userMode;
    private Date userFecha;
    private List<ListCelphoneDetailPayroll> listCelphoneDetailPayrolls = new ArrayList<>();
    private List<ListEmployeePhone> listEmployeePhones = new ArrayList<>();
    private Currency currency;
    private TypeCellularCompany typeCellularCompany;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_cellphone`", nullable = false, scale = 0, precision = 10)
    public Integer getIdCellphone() {
        return this.idCellphone;
    }

    public void setIdCellphone(Integer idCellphone) {
        this.idCellphone = idCellphone;
    }

    @Column(name = "`company_value_bond`", nullable = false, scale = 4, precision = 19)
    public Double getCompanyValueBond() {
        return this.companyValueBond;
    }

    public void setCompanyValueBond(Double companyValueBond) {
        this.companyValueBond = companyValueBond;
    }

    @Column(name = "`number`", nullable = false, length = 12)
    public String getNumber() {
        return this.number;
    }

    public void setNumber(String number) {
        this.number = number;
    }

    @Column(name = "`observation`", nullable = true, length = 255)
    public String getObservation() {
        return this.observation;
    }

    public void setObservation(String observation) {
        this.observation = observation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "mobileNumber")
    public List<ListCelphoneDetailPayroll> getListCelphoneDetailPayrolls() {
        return this.listCelphoneDetailPayrolls;
    }

    public void setListCelphoneDetailPayrolls(List<ListCelphoneDetailPayroll> listCelphoneDetailPayrolls) {
        this.listCelphoneDetailPayrolls = listCelphoneDetailPayrolls;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "mobileNumber")
    public List<ListEmployeePhone> getListEmployeePhones() {
        return this.listEmployeePhones;
    }

    public void setListEmployeePhones(List<ListEmployeePhone> listEmployeePhones) {
        this.listEmployeePhones = listEmployeePhones;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_currency`", referencedColumnName = "`id_currency`", insertable = true, updatable = true)
    public Currency getCurrency() {
        return this.currency;
    }

    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_type_cellular_company`", referencedColumnName = "`id_type_cellular_company`", insertable = true, updatable = true)
    public TypeCellularCompany getTypeCellularCompany() {
        return this.typeCellularCompany;
    }

    public void setTypeCellularCompany(TypeCellularCompany typeCellularCompany) {
        this.typeCellularCompany = typeCellularCompany;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof MobileNumber)) return false;
        final MobileNumber mobileNumber = (MobileNumber) o;
        return Objects.equals(getIdCellphone(), mobileNumber.getIdCellphone());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdCellphone());
    }
}

