/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * EmployeeMessage generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`employee_message`")
public class EmployeeMessage implements Serializable {

    private Integer idEmployeeMessage;
    private String issue;
    private String message;
    private Boolean highPriority;
    private Integer userLocation;
    private Integer userMode;
    private Date userFecha;
    private User userByFkUserSends;
    private User userByFkUserReceive;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_employee_message`", nullable = false, scale = 0, precision = 10)
    public Integer getIdEmployeeMessage() {
        return this.idEmployeeMessage;
    }

    public void setIdEmployeeMessage(Integer idEmployeeMessage) {
        this.idEmployeeMessage = idEmployeeMessage;
    }

    @Column(name = "`issue`", nullable = false, length = 32)
    public String getIssue() {
        return this.issue;
    }

    public void setIssue(String issue) {
        this.issue = issue;
    }

    @Column(name = "`message`", nullable = false, length = 255)
    public String getMessage() {
        return this.message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    @Column(name = "`high_priority`", nullable = false)
    public Boolean isHighPriority() {
        return this.highPriority;
    }

    public void setHighPriority(Boolean highPriority) {
        this.highPriority = highPriority;
    }

    @Column(name = "`user_location`", nullable = false, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_user_sends`", referencedColumnName = "`id_user`", insertable = true, updatable = true)
    public User getUserByFkUserSends() {
        return this.userByFkUserSends;
    }

    public void setUserByFkUserSends(User userByFkUserSends) {
        this.userByFkUserSends = userByFkUserSends;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_user_receive`", referencedColumnName = "`id_user`", insertable = true, updatable = true)
    public User getUserByFkUserReceive() {
        return this.userByFkUserReceive;
    }

    public void setUserByFkUserReceive(User userByFkUserReceive) {
        this.userByFkUserReceive = userByFkUserReceive;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof EmployeeMessage)) return false;
        final EmployeeMessage employeeMessage = (EmployeeMessage) o;
        return Objects.equals(getIdEmployeeMessage(), employeeMessage.getIdEmployeeMessage());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdEmployeeMessage());
    }
}

