/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * EmployeePersonalReference generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`employee_personal_reference`")
public class EmployeePersonalReference implements Serializable {

    private Integer idEmployeePersonalReference;
    private String firstName;
    private String secondName;
    private String surname;
    private String secondSurname;
    private String marriageName;
    private Boolean emergencyContact;
    private Character sex;
    private String employeeRelationship;
    private String direction;
    private String phone;
    private String email;
    private String mobileNumber;
    private String observation;
    private Integer userLocation;
    private Integer userMode;
    private Date userFecha;
    private Employee employee;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_employee_personal_reference`", nullable = false, scale = 0, precision = 10)
    public Integer getIdEmployeePersonalReference() {
        return this.idEmployeePersonalReference;
    }

    public void setIdEmployeePersonalReference(Integer idEmployeePersonalReference) {
        this.idEmployeePersonalReference = idEmployeePersonalReference;
    }

    @Column(name = "`first_name`", nullable = false, length = 25)
    public String getFirstName() {
        return this.firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    @Column(name = "`second_name`", nullable = true, length = 25)
    public String getSecondName() {
        return this.secondName;
    }

    public void setSecondName(String secondName) {
        this.secondName = secondName;
    }

    @Column(name = "`surname`", nullable = false, length = 25)
    public String getSurname() {
        return this.surname;
    }

    public void setSurname(String surname) {
        this.surname = surname;
    }

    @Column(name = "`second_surname`", nullable = true, length = 25)
    public String getSecondSurname() {
        return this.secondSurname;
    }

    public void setSecondSurname(String secondSurname) {
        this.secondSurname = secondSurname;
    }

    @Column(name = "`marriage_name`", nullable = true, length = 25)
    public String getMarriageName() {
        return this.marriageName;
    }

    public void setMarriageName(String marriageName) {
        this.marriageName = marriageName;
    }

    @Column(name = "`emergency_contact`", nullable = false)
    public Boolean isEmergencyContact() {
        return this.emergencyContact;
    }

    public void setEmergencyContact(Boolean emergencyContact) {
        this.emergencyContact = emergencyContact;
    }

    @Column(name = "`sex`", nullable = false, length = 1)
    public Character getSex() {
        return this.sex;
    }

    public void setSex(Character sex) {
        this.sex = sex;
    }

    @Column(name = "`employee_relationship`", nullable = false, length = 50)
    public String getEmployeeRelationship() {
        return this.employeeRelationship;
    }

    public void setEmployeeRelationship(String employeeRelationship) {
        this.employeeRelationship = employeeRelationship;
    }

    @Column(name = "`direction`", nullable = true, length = 100)
    public String getDirection() {
        return this.direction;
    }

    public void setDirection(String direction) {
        this.direction = direction;
    }

    @Column(name = "`phone`", nullable = true, length = 10)
    public String getPhone() {
        return this.phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    @Column(name = "`email`", nullable = false, length = 60)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "`mobile_number`", nullable = true, length = 10)
    public String getMobileNumber() {
        return this.mobileNumber;
    }

    public void setMobileNumber(String mobileNumber) {
        this.mobileNumber = mobileNumber;
    }

    @Column(name = "`observation`", nullable = true, length = 255)
    public String getObservation() {
        return this.observation;
    }

    public void setObservation(String observation) {
        this.observation = observation;
    }

    @Column(name = "`user_location`", nullable = false, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_employee`", referencedColumnName = "`id_employee`", insertable = true, updatable = true)
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof EmployeePersonalReference)) return false;
        final EmployeePersonalReference employeePersonalReference = (EmployeePersonalReference) o;
        return Objects.equals(getIdEmployeePersonalReference(), employeePersonalReference.getIdEmployeePersonalReference());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdEmployeePersonalReference());
    }
}

