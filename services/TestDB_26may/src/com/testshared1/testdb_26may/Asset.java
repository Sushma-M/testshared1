/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Asset generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`asset`")
public class Asset implements Serializable {

    private Integer idAsset;
    private String inventoryNumber;
    private String name;
    private String description_;
    private Boolean currentlyLoaded;
    private Boolean rejection;
    private String brand;
    private String model;
    private String seriesNumber;
    private String billNumber;
    private Date purchaseDate;
    private String supplierName;
    private Double purchasedValue;
    private String observation;
    private Integer userLocation;
    private Integer userMode;
    private Date userFecha;
    private Employee employee;
    private TypeAsset typeAsset;
    private List<ListAssetDiscarded> listAssetDiscardeds = new ArrayList<>();
    private List<AssetFile> assetFiles = new ArrayList<>();
    private List<ListAssetLoaded> listAssetLoadeds = new ArrayList<>();
    private List<ListAssetReintegrated> listAssetReintegrateds = new ArrayList<>();
    private List<AssetPhotoFile> assetPhotoFiles = new ArrayList<>();
    private List<ListAssetUnloaded> listAssetUnloadeds = new ArrayList<>();

    @Id
    @Column(name = "`id_asset`", nullable = false, scale = 0, precision = 10)
    public Integer getIdAsset() {
        return this.idAsset;
    }

    public void setIdAsset(Integer idAsset) {
        this.idAsset = idAsset;
    }

    @Column(name = "`inventory_number`", nullable = false, length = 16)
    public String getInventoryNumber() {
        return this.inventoryNumber;
    }

    public void setInventoryNumber(String inventoryNumber) {
        this.inventoryNumber = inventoryNumber;
    }

    @Column(name = "`name`", nullable = false, length = 32)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "`description?`", nullable = true, length = 64)
    public String getDescription_() {
        return this.description_;
    }

    public void setDescription_(String description_) {
        this.description_ = description_;
    }

    @Column(name = "`currently_loaded`", nullable = false)
    public Boolean isCurrentlyLoaded() {
        return this.currentlyLoaded;
    }

    public void setCurrentlyLoaded(Boolean currentlyLoaded) {
        this.currentlyLoaded = currentlyLoaded;
    }

    @Column(name = "`rejection`", nullable = false)
    public Boolean isRejection() {
        return this.rejection;
    }

    public void setRejection(Boolean rejection) {
        this.rejection = rejection;
    }

    @Column(name = "`brand`", nullable = true, length = 16)
    public String getBrand() {
        return this.brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    @Column(name = "`model`", nullable = true, length = 16)
    public String getModel() {
        return this.model;
    }

    public void setModel(String model) {
        this.model = model;
    }

    @Column(name = "`series_number`", nullable = true, length = 16)
    public String getSeriesNumber() {
        return this.seriesNumber;
    }

    public void setSeriesNumber(String seriesNumber) {
        this.seriesNumber = seriesNumber;
    }

    @Column(name = "`bill_number`", nullable = true, length = 16)
    public String getBillNumber() {
        return this.billNumber;
    }

    public void setBillNumber(String billNumber) {
        this.billNumber = billNumber;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`purchase_date`", nullable = true)
    public Date getPurchaseDate() {
        return this.purchaseDate;
    }

    public void setPurchaseDate(Date purchaseDate) {
        this.purchaseDate = purchaseDate;
    }

    @Column(name = "`supplier_name`", nullable = true, length = 64)
    public String getSupplierName() {
        return this.supplierName;
    }

    public void setSupplierName(String supplierName) {
        this.supplierName = supplierName;
    }

    @Column(name = "`purchased_value`", nullable = true, scale = 2, precision = 11)
    public Double getPurchasedValue() {
        return this.purchasedValue;
    }

    public void setPurchasedValue(Double purchasedValue) {
        this.purchasedValue = purchasedValue;
    }

    @Column(name = "`observation`", nullable = true, length = 128)
    public String getObservation() {
        return this.observation;
    }

    public void setObservation(String observation) {
        this.observation = observation;
    }

    @Column(name = "`user_location`", nullable = false, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_employee`", referencedColumnName = "`id_employee`", insertable = true, updatable = true)
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_type_asset`", referencedColumnName = "`id_type_asset`", insertable = true, updatable = true)
    public TypeAsset getTypeAsset() {
        return this.typeAsset;
    }

    public void setTypeAsset(TypeAsset typeAsset) {
        this.typeAsset = typeAsset;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "asset")
    public List<ListAssetDiscarded> getListAssetDiscardeds() {
        return this.listAssetDiscardeds;
    }

    public void setListAssetDiscardeds(List<ListAssetDiscarded> listAssetDiscardeds) {
        this.listAssetDiscardeds = listAssetDiscardeds;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "asset")
    public List<AssetFile> getAssetFiles() {
        return this.assetFiles;
    }

    public void setAssetFiles(List<AssetFile> assetFiles) {
        this.assetFiles = assetFiles;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "asset")
    public List<ListAssetLoaded> getListAssetLoadeds() {
        return this.listAssetLoadeds;
    }

    public void setListAssetLoadeds(List<ListAssetLoaded> listAssetLoadeds) {
        this.listAssetLoadeds = listAssetLoadeds;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "asset")
    public List<ListAssetReintegrated> getListAssetReintegrateds() {
        return this.listAssetReintegrateds;
    }

    public void setListAssetReintegrateds(List<ListAssetReintegrated> listAssetReintegrateds) {
        this.listAssetReintegrateds = listAssetReintegrateds;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "asset")
    public List<AssetPhotoFile> getAssetPhotoFiles() {
        return this.assetPhotoFiles;
    }

    public void setAssetPhotoFiles(List<AssetPhotoFile> assetPhotoFiles) {
        this.assetPhotoFiles = assetPhotoFiles;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "asset")
    public List<ListAssetUnloaded> getListAssetUnloadeds() {
        return this.listAssetUnloadeds;
    }

    public void setListAssetUnloadeds(List<ListAssetUnloaded> listAssetUnloadeds) {
        this.listAssetUnloadeds = listAssetUnloadeds;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Asset)) return false;
        final Asset asset = (Asset) o;
        return Objects.equals(getIdAsset(), asset.getIdAsset());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdAsset());
    }
}

