/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * RateOvertimeHour generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`rate_overtime_hour`")
public class RateOvertimeHour implements Serializable {

    private Integer idTypeGenerationForm;
    private Date startTime;
    private Date endTime;
    private Boolean calculatedBaseSalary;
    private Double extraHourRate;
    private String observation;
    private Integer userMode;
    private Date userFecha;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_type_generation_form`", nullable = false, scale = 0, precision = 10)
    public Integer getIdTypeGenerationForm() {
        return this.idTypeGenerationForm;
    }

    public void setIdTypeGenerationForm(Integer idTypeGenerationForm) {
        this.idTypeGenerationForm = idTypeGenerationForm;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "`start_time`", nullable = false)
    public Date getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "`end_time`", nullable = false)
    public Date getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    @Column(name = "`calculated_base_salary`", nullable = false)
    public Boolean isCalculatedBaseSalary() {
        return this.calculatedBaseSalary;
    }

    public void setCalculatedBaseSalary(Boolean calculatedBaseSalary) {
        this.calculatedBaseSalary = calculatedBaseSalary;
    }

    @Column(name = "`extra_hour_rate`", nullable = false, scale = 4, precision = 19)
    public Double getExtraHourRate() {
        return this.extraHourRate;
    }

    public void setExtraHourRate(Double extraHourRate) {
        this.extraHourRate = extraHourRate;
    }

    @Column(name = "`observation`", nullable = true, length = 150)
    public String getObservation() {
        return this.observation;
    }

    public void setObservation(String observation) {
        this.observation = observation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof RateOvertimeHour)) return false;
        final RateOvertimeHour rateOvertimeHour = (RateOvertimeHour) o;
        return Objects.equals(getIdTypeGenerationForm(), rateOvertimeHour.getIdTypeGenerationForm());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdTypeGenerationForm());
    }
}

