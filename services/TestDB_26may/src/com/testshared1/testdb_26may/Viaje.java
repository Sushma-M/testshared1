/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Viaje generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`viaje`")
public class Viaje implements Serializable {

    private Integer idTravel;
    private Date travelDate;
    private Date returnDate;
    private String destination;
    private String travelMotive;
    private Double budget;
    private Integer userMode;
    private Integer userLocation;
    private Date userFecha;
    private List<TravelEmployee> travelEmployees = new ArrayList<>();

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_travel`", nullable = false, scale = 0, precision = 10)
    public Integer getIdTravel() {
        return this.idTravel;
    }

    public void setIdTravel(Integer idTravel) {
        this.idTravel = idTravel;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`travel_date`", nullable = false)
    public Date getTravelDate() {
        return this.travelDate;
    }

    public void setTravelDate(Date travelDate) {
        this.travelDate = travelDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`return_date`", nullable = false)
    public Date getReturnDate() {
        return this.returnDate;
    }

    public void setReturnDate(Date returnDate) {
        this.returnDate = returnDate;
    }

    @Column(name = "`destination`", nullable = false, length = 150)
    public String getDestination() {
        return this.destination;
    }

    public void setDestination(String destination) {
        this.destination = destination;
    }

    @Column(name = "`travel_motive`", nullable = false, length = 255)
    public String getTravelMotive() {
        return this.travelMotive;
    }

    public void setTravelMotive(String travelMotive) {
        this.travelMotive = travelMotive;
    }

    @Column(name = "`budget`", nullable = false, scale = 4, precision = 19)
    public Double getBudget() {
        return this.budget;
    }

    public void setBudget(Double budget) {
        this.budget = budget;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Column(name = "`user_location`", nullable = false, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "viaje")
    public List<TravelEmployee> getTravelEmployees() {
        return this.travelEmployees;
    }

    public void setTravelEmployees(List<TravelEmployee> travelEmployees) {
        this.travelEmployees = travelEmployees;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Viaje)) return false;
        final Viaje viaje = (Viaje) o;
        return Objects.equals(getIdTravel(), viaje.getIdTravel());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdTravel());
    }
}

