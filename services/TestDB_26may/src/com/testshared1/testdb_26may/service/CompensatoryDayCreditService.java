/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.CompensatoryDayCredit;

/**
 * Service object for domain model class CompensatoryDayCredit.
 *
 * @see {@link CompensatoryDayCredit}
 */
public interface CompensatoryDayCreditService {

    /**
     * Creates a new CompensatoryDayCredit.
     *
     * @param compensatoryDayCredit The information of the created CompositeTable.
     * @return The created CompensatoryDayCredit.
     */
	CompensatoryDayCredit create(CompensatoryDayCredit compensatoryDayCredit);


	/**
	 * Finds CompensatoryDayCredit by id.
	 *
	 * @param compensatoryDayCreditId The id of the wanted CompensatoryDayCredit.
	 * @return The found CompensatoryDayCredit. If no CompensatoryDayCredit is found, this method returns null.
	 */
	CompensatoryDayCredit getById(Integer compensatoryDayCreditId) throws EntityNotFoundException;

	/**
	 * Updates the information of a CompensatoryDayCredit.
	 *
	 * @param compensatoryDayCredit The information of the updated CompensatoryDayCredit.
	 * @return The updated CompensatoryDayCredit.
     *
	 * @throws EntityNotFoundException if no CompensatoryDayCredit is found with given id.
	 */
	CompensatoryDayCredit update(CompensatoryDayCredit compensatoryDayCredit) throws EntityNotFoundException;

    /**
	 * Deletes a CompensatoryDayCredit.
	 *
	 * @param compensatoryDayCreditId The id of the deleted CompensatoryDayCredit.
	 * @return The deleted CompensatoryDayCredit.
     *
	 * @throws EntityNotFoundException if no CompensatoryDayCredit is found with the given id.
	 */
	CompensatoryDayCredit delete(Integer compensatoryDayCreditId) throws EntityNotFoundException;

	/**
	 * Finds all CompensatoryDayCredits.
	 *
	 * @return A list of CompensatoryDayCredits.
	 */
    @Deprecated
	Page<CompensatoryDayCredit> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all CompensatoryDayCredits.
	 * @return A list of CompensatoryDayCredits.
	 */
    Page<CompensatoryDayCredit> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the CompensatoryDayCredits in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the CompensatoryDayCredit.
	 */
	long count(String query);

    Page<CompensatoryDayCredit> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

