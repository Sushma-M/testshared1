/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.AssessmentField;

/**
 * Service object for domain model class AssessmentField.
 *
 * @see {@link AssessmentField}
 */
public interface AssessmentFieldService {

    /**
     * Creates a new AssessmentField.
     *
     * @param assessmentField The information of the created CompositeTable.
     * @return The created AssessmentField.
     */
	AssessmentField create(AssessmentField assessmentField);


	/**
	 * Finds AssessmentField by id.
	 *
	 * @param assessmentFieldId The id of the wanted AssessmentField.
	 * @return The found AssessmentField. If no AssessmentField is found, this method returns null.
	 */
	AssessmentField getById(Integer assessmentFieldId) throws EntityNotFoundException;

	/**
	 * Updates the information of a AssessmentField.
	 *
	 * @param assessmentField The information of the updated AssessmentField.
	 * @return The updated AssessmentField.
     *
	 * @throws EntityNotFoundException if no AssessmentField is found with given id.
	 */
	AssessmentField update(AssessmentField assessmentField) throws EntityNotFoundException;

    /**
	 * Deletes a AssessmentField.
	 *
	 * @param assessmentFieldId The id of the deleted AssessmentField.
	 * @return The deleted AssessmentField.
     *
	 * @throws EntityNotFoundException if no AssessmentField is found with the given id.
	 */
	AssessmentField delete(Integer assessmentFieldId) throws EntityNotFoundException;

	/**
	 * Finds all AssessmentFields.
	 *
	 * @return A list of AssessmentFields.
	 */
    @Deprecated
	Page<AssessmentField> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all AssessmentFields.
	 * @return A list of AssessmentFields.
	 */
    Page<AssessmentField> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the AssessmentFields in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the AssessmentField.
	 */
	long count(String query);

    Page<AssessmentField> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

