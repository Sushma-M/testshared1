/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.AssetFile;

/**
 * Service object for domain model class AssetFile.
 *
 * @see {@link AssetFile}
 */
public interface AssetFileService {

    /**
     * Creates a new AssetFile.
     *
     * @param assetFile The information of the created CompositeTable.
     * @return The created AssetFile.
     */
	AssetFile create(AssetFile assetFile);


	/**
	 * Finds AssetFile by id.
	 *
	 * @param assetFileId The id of the wanted AssetFile.
	 * @return The found AssetFile. If no AssetFile is found, this method returns null.
	 */
	AssetFile getById(Integer assetFileId) throws EntityNotFoundException;

	/**
	 * Updates the information of a AssetFile.
	 *
	 * @param assetFile The information of the updated AssetFile.
	 * @return The updated AssetFile.
     *
	 * @throws EntityNotFoundException if no AssetFile is found with given id.
	 */
	AssetFile update(AssetFile assetFile) throws EntityNotFoundException;

    /**
	 * Deletes a AssetFile.
	 *
	 * @param assetFileId The id of the deleted AssetFile.
	 * @return The deleted AssetFile.
     *
	 * @throws EntityNotFoundException if no AssetFile is found with the given id.
	 */
	AssetFile delete(Integer assetFileId) throws EntityNotFoundException;

	/**
	 * Finds all AssetFiles.
	 *
	 * @return A list of AssetFiles.
	 */
    @Deprecated
	Page<AssetFile> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all AssetFiles.
	 * @return A list of AssetFiles.
	 */
    Page<AssetFile> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the AssetFiles in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the AssetFile.
	 */
	long count(String query);

    Page<AssetFile> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

