/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.TypeMovement;

/**
 * Service object for domain model class TypeMovement.
 *
 * @see {@link TypeMovement}
 */
public interface TypeMovementService {

    /**
     * Creates a new TypeMovement.
     *
     * @param typeMovement The information of the created CompositeTable.
     * @return The created TypeMovement.
     */
	TypeMovement create(TypeMovement typeMovement);


	/**
	 * Finds TypeMovement by id.
	 *
	 * @param typeMovementId The id of the wanted TypeMovement.
	 * @return The found TypeMovement. If no TypeMovement is found, this method returns null.
	 */
	TypeMovement getById(Integer typeMovementId) throws EntityNotFoundException;

	/**
	 * Updates the information of a TypeMovement.
	 *
	 * @param typeMovement The information of the updated TypeMovement.
	 * @return The updated TypeMovement.
     *
	 * @throws EntityNotFoundException if no TypeMovement is found with given id.
	 */
	TypeMovement update(TypeMovement typeMovement) throws EntityNotFoundException;

    /**
	 * Deletes a TypeMovement.
	 *
	 * @param typeMovementId The id of the deleted TypeMovement.
	 * @return The deleted TypeMovement.
     *
	 * @throws EntityNotFoundException if no TypeMovement is found with the given id.
	 */
	TypeMovement delete(Integer typeMovementId) throws EntityNotFoundException;

	/**
	 * Finds all TypeMovements.
	 *
	 * @return A list of TypeMovements.
	 */
    @Deprecated
	Page<TypeMovement> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all TypeMovements.
	 * @return A list of TypeMovements.
	 */
    Page<TypeMovement> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the TypeMovements in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the TypeMovement.
	 */
	long count(String query);

    Page<TypeMovement> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

