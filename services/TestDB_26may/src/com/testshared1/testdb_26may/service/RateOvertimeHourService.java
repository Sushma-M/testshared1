/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.RateOvertimeHour;

/**
 * Service object for domain model class RateOvertimeHour.
 *
 * @see {@link RateOvertimeHour}
 */
public interface RateOvertimeHourService {

    /**
     * Creates a new RateOvertimeHour.
     *
     * @param rateOvertimeHour The information of the created CompositeTable.
     * @return The created RateOvertimeHour.
     */
	RateOvertimeHour create(RateOvertimeHour rateOvertimeHour);


	/**
	 * Finds RateOvertimeHour by id.
	 *
	 * @param rateOvertimeHourId The id of the wanted RateOvertimeHour.
	 * @return The found RateOvertimeHour. If no RateOvertimeHour is found, this method returns null.
	 */
	RateOvertimeHour getById(Integer rateOvertimeHourId) throws EntityNotFoundException;

	/**
	 * Updates the information of a RateOvertimeHour.
	 *
	 * @param rateOvertimeHour The information of the updated RateOvertimeHour.
	 * @return The updated RateOvertimeHour.
     *
	 * @throws EntityNotFoundException if no RateOvertimeHour is found with given id.
	 */
	RateOvertimeHour update(RateOvertimeHour rateOvertimeHour) throws EntityNotFoundException;

    /**
	 * Deletes a RateOvertimeHour.
	 *
	 * @param rateOvertimeHourId The id of the deleted RateOvertimeHour.
	 * @return The deleted RateOvertimeHour.
     *
	 * @throws EntityNotFoundException if no RateOvertimeHour is found with the given id.
	 */
	RateOvertimeHour delete(Integer rateOvertimeHourId) throws EntityNotFoundException;

	/**
	 * Finds all RateOvertimeHours.
	 *
	 * @return A list of RateOvertimeHours.
	 */
    @Deprecated
	Page<RateOvertimeHour> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all RateOvertimeHours.
	 * @return A list of RateOvertimeHours.
	 */
    Page<RateOvertimeHour> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the RateOvertimeHours in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the RateOvertimeHour.
	 */
	long count(String query);

    Page<RateOvertimeHour> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

