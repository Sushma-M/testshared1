/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.TypeExtraHourSegment;

/**
 * Service object for domain model class TypeExtraHourSegment.
 *
 * @see {@link TypeExtraHourSegment}
 */
public interface TypeExtraHourSegmentService {

    /**
     * Creates a new TypeExtraHourSegment.
     *
     * @param typeExtraHourSegment The information of the created CompositeTable.
     * @return The created TypeExtraHourSegment.
     */
	TypeExtraHourSegment create(TypeExtraHourSegment typeExtraHourSegment);


	/**
	 * Finds TypeExtraHourSegment by id.
	 *
	 * @param typeExtraHourSegmentId The id of the wanted TypeExtraHourSegment.
	 * @return The found TypeExtraHourSegment. If no TypeExtraHourSegment is found, this method returns null.
	 */
	TypeExtraHourSegment getById(Integer typeExtraHourSegmentId) throws EntityNotFoundException;

	/**
	 * Updates the information of a TypeExtraHourSegment.
	 *
	 * @param typeExtraHourSegment The information of the updated TypeExtraHourSegment.
	 * @return The updated TypeExtraHourSegment.
     *
	 * @throws EntityNotFoundException if no TypeExtraHourSegment is found with given id.
	 */
	TypeExtraHourSegment update(TypeExtraHourSegment typeExtraHourSegment) throws EntityNotFoundException;

    /**
	 * Deletes a TypeExtraHourSegment.
	 *
	 * @param typeExtraHourSegmentId The id of the deleted TypeExtraHourSegment.
	 * @return The deleted TypeExtraHourSegment.
     *
	 * @throws EntityNotFoundException if no TypeExtraHourSegment is found with the given id.
	 */
	TypeExtraHourSegment delete(Integer typeExtraHourSegmentId) throws EntityNotFoundException;

	/**
	 * Finds all TypeExtraHourSegments.
	 *
	 * @return A list of TypeExtraHourSegments.
	 */
    @Deprecated
	Page<TypeExtraHourSegment> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all TypeExtraHourSegments.
	 * @return A list of TypeExtraHourSegments.
	 */
    Page<TypeExtraHourSegment> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the TypeExtraHourSegments in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the TypeExtraHourSegment.
	 */
	long count(String query);

    Page<TypeExtraHourSegment> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

