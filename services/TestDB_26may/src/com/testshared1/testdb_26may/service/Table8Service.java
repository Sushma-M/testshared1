/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.Table8;

/**
 * Service object for domain model class Table8.
 *
 * @see {@link Table8}
 */
public interface Table8Service {

    /**
     * Creates a new Table8.
     *
     * @param table8 The information of the created CompositeTable.
     * @return The created Table8.
     */
	Table8 create(Table8 table8);


	/**
	 * Finds Table8 by id.
	 *
	 * @param table8Id The id of the wanted Table8.
	 * @return The found Table8. If no Table8 is found, this method returns null.
	 */
	Table8 getById(String table8Id) throws EntityNotFoundException;

	/**
	 * Updates the information of a Table8.
	 *
	 * @param table8 The information of the updated Table8.
	 * @return The updated Table8.
     *
	 * @throws EntityNotFoundException if no Table8 is found with given id.
	 */
	Table8 update(Table8 table8) throws EntityNotFoundException;

    /**
	 * Deletes a Table8.
	 *
	 * @param table8Id The id of the deleted Table8.
	 * @return The deleted Table8.
     *
	 * @throws EntityNotFoundException if no Table8 is found with the given id.
	 */
	Table8 delete(String table8Id) throws EntityNotFoundException;

	/**
	 * Finds all Table8s.
	 *
	 * @return A list of Table8s.
	 */
    @Deprecated
	Page<Table8> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Table8s.
	 * @return A list of Table8s.
	 */
    Page<Table8> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Table8s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Table8.
	 */
	long count(String query);

    Page<Table8> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

