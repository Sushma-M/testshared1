/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.TypeApplicantStatus;

/**
 * Service object for domain model class TypeApplicantStatus.
 *
 * @see {@link TypeApplicantStatus}
 */
public interface TypeApplicantStatusService {

    /**
     * Creates a new TypeApplicantStatus.
     *
     * @param typeApplicantStatus The information of the created CompositeTable.
     * @return The created TypeApplicantStatus.
     */
	TypeApplicantStatus create(TypeApplicantStatus typeApplicantStatus);


	/**
	 * Finds TypeApplicantStatus by id.
	 *
	 * @param typeApplicantStatusId The id of the wanted TypeApplicantStatus.
	 * @return The found TypeApplicantStatus. If no TypeApplicantStatus is found, this method returns null.
	 */
	TypeApplicantStatus getById(Integer typeApplicantStatusId) throws EntityNotFoundException;

	/**
	 * Updates the information of a TypeApplicantStatus.
	 *
	 * @param typeApplicantStatus The information of the updated TypeApplicantStatus.
	 * @return The updated TypeApplicantStatus.
     *
	 * @throws EntityNotFoundException if no TypeApplicantStatus is found with given id.
	 */
	TypeApplicantStatus update(TypeApplicantStatus typeApplicantStatus) throws EntityNotFoundException;

    /**
	 * Deletes a TypeApplicantStatus.
	 *
	 * @param typeApplicantStatusId The id of the deleted TypeApplicantStatus.
	 * @return The deleted TypeApplicantStatus.
     *
	 * @throws EntityNotFoundException if no TypeApplicantStatus is found with the given id.
	 */
	TypeApplicantStatus delete(Integer typeApplicantStatusId) throws EntityNotFoundException;

	/**
	 * Finds all TypeApplicantStatuses.
	 *
	 * @return A list of TypeApplicantStatuses.
	 */
    @Deprecated
	Page<TypeApplicantStatus> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all TypeApplicantStatuses.
	 * @return A list of TypeApplicantStatuses.
	 */
    Page<TypeApplicantStatus> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the TypeApplicantStatuses in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the TypeApplicantStatus.
	 */
	long count(String query);

    Page<TypeApplicantStatus> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

