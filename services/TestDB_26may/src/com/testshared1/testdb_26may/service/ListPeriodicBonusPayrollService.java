/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.ListPeriodicBonusPayroll;

/**
 * Service object for domain model class ListPeriodicBonusPayroll.
 *
 * @see {@link ListPeriodicBonusPayroll}
 */
public interface ListPeriodicBonusPayrollService {

    /**
     * Creates a new ListPeriodicBonusPayroll.
     *
     * @param listPeriodicBonusPayroll The information of the created CompositeTable.
     * @return The created ListPeriodicBonusPayroll.
     */
	ListPeriodicBonusPayroll create(ListPeriodicBonusPayroll listPeriodicBonusPayroll);


	/**
	 * Finds ListPeriodicBonusPayroll by id.
	 *
	 * @param listPeriodicBonusPayrollId The id of the wanted ListPeriodicBonusPayroll.
	 * @return The found ListPeriodicBonusPayroll. If no ListPeriodicBonusPayroll is found, this method returns null.
	 */
	ListPeriodicBonusPayroll getById(Integer listPeriodicBonusPayrollId) throws EntityNotFoundException;

	/**
	 * Updates the information of a ListPeriodicBonusPayroll.
	 *
	 * @param listPeriodicBonusPayroll The information of the updated ListPeriodicBonusPayroll.
	 * @return The updated ListPeriodicBonusPayroll.
     *
	 * @throws EntityNotFoundException if no ListPeriodicBonusPayroll is found with given id.
	 */
	ListPeriodicBonusPayroll update(ListPeriodicBonusPayroll listPeriodicBonusPayroll) throws EntityNotFoundException;

    /**
	 * Deletes a ListPeriodicBonusPayroll.
	 *
	 * @param listPeriodicBonusPayrollId The id of the deleted ListPeriodicBonusPayroll.
	 * @return The deleted ListPeriodicBonusPayroll.
     *
	 * @throws EntityNotFoundException if no ListPeriodicBonusPayroll is found with the given id.
	 */
	ListPeriodicBonusPayroll delete(Integer listPeriodicBonusPayrollId) throws EntityNotFoundException;

	/**
	 * Finds all ListPeriodicBonusPayrolls.
	 *
	 * @return A list of ListPeriodicBonusPayrolls.
	 */
    @Deprecated
	Page<ListPeriodicBonusPayroll> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all ListPeriodicBonusPayrolls.
	 * @return A list of ListPeriodicBonusPayrolls.
	 */
    Page<ListPeriodicBonusPayroll> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the ListPeriodicBonusPayrolls in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the ListPeriodicBonusPayroll.
	 */
	long count(String query);

    Page<ListPeriodicBonusPayroll> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

