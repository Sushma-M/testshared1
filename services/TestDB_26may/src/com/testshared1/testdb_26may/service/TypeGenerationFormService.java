/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.TypeGenerationForm;

/**
 * Service object for domain model class TypeGenerationForm.
 *
 * @see {@link TypeGenerationForm}
 */
public interface TypeGenerationFormService {

    /**
     * Creates a new TypeGenerationForm.
     *
     * @param typeGenerationForm The information of the created CompositeTable.
     * @return The created TypeGenerationForm.
     */
	TypeGenerationForm create(TypeGenerationForm typeGenerationForm);


	/**
	 * Finds TypeGenerationForm by id.
	 *
	 * @param typeGenerationFormId The id of the wanted TypeGenerationForm.
	 * @return The found TypeGenerationForm. If no TypeGenerationForm is found, this method returns null.
	 */
	TypeGenerationForm getById(Integer typeGenerationFormId) throws EntityNotFoundException;

	/**
	 * Updates the information of a TypeGenerationForm.
	 *
	 * @param typeGenerationForm The information of the updated TypeGenerationForm.
	 * @return The updated TypeGenerationForm.
     *
	 * @throws EntityNotFoundException if no TypeGenerationForm is found with given id.
	 */
	TypeGenerationForm update(TypeGenerationForm typeGenerationForm) throws EntityNotFoundException;

    /**
	 * Deletes a TypeGenerationForm.
	 *
	 * @param typeGenerationFormId The id of the deleted TypeGenerationForm.
	 * @return The deleted TypeGenerationForm.
     *
	 * @throws EntityNotFoundException if no TypeGenerationForm is found with the given id.
	 */
	TypeGenerationForm delete(Integer typeGenerationFormId) throws EntityNotFoundException;

	/**
	 * Finds all TypeGenerationForms.
	 *
	 * @return A list of TypeGenerationForms.
	 */
    @Deprecated
	Page<TypeGenerationForm> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all TypeGenerationForms.
	 * @return A list of TypeGenerationForms.
	 */
    Page<TypeGenerationForm> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the TypeGenerationForms in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the TypeGenerationForm.
	 */
	long count(String query);

    Page<TypeGenerationForm> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

