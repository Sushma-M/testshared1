/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.AssetAssignDocument;

/**
 * Service object for domain model class AssetAssignDocument.
 *
 * @see {@link AssetAssignDocument}
 */
public interface AssetAssignDocumentService {

    /**
     * Creates a new AssetAssignDocument.
     *
     * @param assetAssignDocument The information of the created CompositeTable.
     * @return The created AssetAssignDocument.
     */
	AssetAssignDocument create(AssetAssignDocument assetAssignDocument);


	/**
	 * Finds AssetAssignDocument by id.
	 *
	 * @param assetAssignDocumentId The id of the wanted AssetAssignDocument.
	 * @return The found AssetAssignDocument. If no AssetAssignDocument is found, this method returns null.
	 */
	AssetAssignDocument getById(Integer assetAssignDocumentId) throws EntityNotFoundException;

	/**
	 * Updates the information of a AssetAssignDocument.
	 *
	 * @param assetAssignDocument The information of the updated AssetAssignDocument.
	 * @return The updated AssetAssignDocument.
     *
	 * @throws EntityNotFoundException if no AssetAssignDocument is found with given id.
	 */
	AssetAssignDocument update(AssetAssignDocument assetAssignDocument) throws EntityNotFoundException;

    /**
	 * Deletes a AssetAssignDocument.
	 *
	 * @param assetAssignDocumentId The id of the deleted AssetAssignDocument.
	 * @return The deleted AssetAssignDocument.
     *
	 * @throws EntityNotFoundException if no AssetAssignDocument is found with the given id.
	 */
	AssetAssignDocument delete(Integer assetAssignDocumentId) throws EntityNotFoundException;

	/**
	 * Finds all AssetAssignDocuments.
	 *
	 * @return A list of AssetAssignDocuments.
	 */
    @Deprecated
	Page<AssetAssignDocument> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all AssetAssignDocuments.
	 * @return A list of AssetAssignDocuments.
	 */
    Page<AssetAssignDocument> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the AssetAssignDocuments in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the AssetAssignDocument.
	 */
	long count(String query);

    Page<AssetAssignDocument> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

