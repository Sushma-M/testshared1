/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.WorkPosition;

/**
 * Service object for domain model class WorkPosition.
 *
 * @see {@link WorkPosition}
 */
public interface WorkPositionService {

    /**
     * Creates a new WorkPosition.
     *
     * @param workPosition The information of the created CompositeTable.
     * @return The created WorkPosition.
     */
	WorkPosition create(WorkPosition workPosition);


	/**
	 * Finds WorkPosition by id.
	 *
	 * @param workPositionId The id of the wanted WorkPosition.
	 * @return The found WorkPosition. If no WorkPosition is found, this method returns null.
	 */
	WorkPosition getById(Integer workPositionId) throws EntityNotFoundException;

	/**
	 * Updates the information of a WorkPosition.
	 *
	 * @param workPosition The information of the updated WorkPosition.
	 * @return The updated WorkPosition.
     *
	 * @throws EntityNotFoundException if no WorkPosition is found with given id.
	 */
	WorkPosition update(WorkPosition workPosition) throws EntityNotFoundException;

    /**
	 * Deletes a WorkPosition.
	 *
	 * @param workPositionId The id of the deleted WorkPosition.
	 * @return The deleted WorkPosition.
     *
	 * @throws EntityNotFoundException if no WorkPosition is found with the given id.
	 */
	WorkPosition delete(Integer workPositionId) throws EntityNotFoundException;

	/**
	 * Finds all WorkPositions.
	 *
	 * @return A list of WorkPositions.
	 */
    @Deprecated
	Page<WorkPosition> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all WorkPositions.
	 * @return A list of WorkPositions.
	 */
    Page<WorkPosition> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the WorkPositions in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the WorkPosition.
	 */
	long count(String query);

    Page<WorkPosition> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

