/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.AssetReintegrationDocument;

/**
 * Service object for domain model class AssetReintegrationDocument.
 *
 * @see {@link AssetReintegrationDocument}
 */
public interface AssetReintegrationDocumentService {

    /**
     * Creates a new AssetReintegrationDocument.
     *
     * @param assetReintegrationDocument The information of the created CompositeTable.
     * @return The created AssetReintegrationDocument.
     */
	AssetReintegrationDocument create(AssetReintegrationDocument assetReintegrationDocument);


	/**
	 * Finds AssetReintegrationDocument by id.
	 *
	 * @param assetReintegrationDocumentId The id of the wanted AssetReintegrationDocument.
	 * @return The found AssetReintegrationDocument. If no AssetReintegrationDocument is found, this method returns null.
	 */
	AssetReintegrationDocument getById(Integer assetReintegrationDocumentId) throws EntityNotFoundException;

	/**
	 * Updates the information of a AssetReintegrationDocument.
	 *
	 * @param assetReintegrationDocument The information of the updated AssetReintegrationDocument.
	 * @return The updated AssetReintegrationDocument.
     *
	 * @throws EntityNotFoundException if no AssetReintegrationDocument is found with given id.
	 */
	AssetReintegrationDocument update(AssetReintegrationDocument assetReintegrationDocument) throws EntityNotFoundException;

    /**
	 * Deletes a AssetReintegrationDocument.
	 *
	 * @param assetReintegrationDocumentId The id of the deleted AssetReintegrationDocument.
	 * @return The deleted AssetReintegrationDocument.
     *
	 * @throws EntityNotFoundException if no AssetReintegrationDocument is found with the given id.
	 */
	AssetReintegrationDocument delete(Integer assetReintegrationDocumentId) throws EntityNotFoundException;

	/**
	 * Finds all AssetReintegrationDocuments.
	 *
	 * @return A list of AssetReintegrationDocuments.
	 */
    @Deprecated
	Page<AssetReintegrationDocument> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all AssetReintegrationDocuments.
	 * @return A list of AssetReintegrationDocuments.
	 */
    Page<AssetReintegrationDocument> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the AssetReintegrationDocuments in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the AssetReintegrationDocument.
	 */
	long count(String query);

    Page<AssetReintegrationDocument> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

