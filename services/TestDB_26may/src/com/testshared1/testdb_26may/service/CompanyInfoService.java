/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.CompanyInfo;

/**
 * Service object for domain model class CompanyInfo.
 *
 * @see {@link CompanyInfo}
 */
public interface CompanyInfoService {

    /**
     * Creates a new CompanyInfo.
     *
     * @param companyInfo The information of the created CompositeTable.
     * @return The created CompanyInfo.
     */
	CompanyInfo create(CompanyInfo companyInfo);


	/**
	 * Finds CompanyInfo by id.
	 *
	 * @param companyInfoId The id of the wanted CompanyInfo.
	 * @return The found CompanyInfo. If no CompanyInfo is found, this method returns null.
	 */
	CompanyInfo getById(Integer companyInfoId) throws EntityNotFoundException;

	/**
	 * Updates the information of a CompanyInfo.
	 *
	 * @param companyInfo The information of the updated CompanyInfo.
	 * @return The updated CompanyInfo.
     *
	 * @throws EntityNotFoundException if no CompanyInfo is found with given id.
	 */
	CompanyInfo update(CompanyInfo companyInfo) throws EntityNotFoundException;

    /**
	 * Deletes a CompanyInfo.
	 *
	 * @param companyInfoId The id of the deleted CompanyInfo.
	 * @return The deleted CompanyInfo.
     *
	 * @throws EntityNotFoundException if no CompanyInfo is found with the given id.
	 */
	CompanyInfo delete(Integer companyInfoId) throws EntityNotFoundException;

	/**
	 * Finds all CompanyInfos.
	 *
	 * @return A list of CompanyInfos.
	 */
    @Deprecated
	Page<CompanyInfo> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all CompanyInfos.
	 * @return A list of CompanyInfos.
	 */
    Page<CompanyInfo> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the CompanyInfos in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the CompanyInfo.
	 */
	long count(String query);

    Page<CompanyInfo> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

