/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.Table7;

/**
 * Service object for domain model class Table7.
 *
 * @see {@link Table7}
 */
public interface Table7Service {

    /**
     * Creates a new Table7.
     *
     * @param table7 The information of the created CompositeTable.
     * @return The created Table7.
     */
	Table7 create(Table7 table7);


	/**
	 * Finds Table7 by id.
	 *
	 * @param table7Id The id of the wanted Table7.
	 * @return The found Table7. If no Table7 is found, this method returns null.
	 */
	Table7 getById(Integer table7Id) throws EntityNotFoundException;

	/**
	 * Updates the information of a Table7.
	 *
	 * @param table7 The information of the updated Table7.
	 * @return The updated Table7.
     *
	 * @throws EntityNotFoundException if no Table7 is found with given id.
	 */
	Table7 update(Table7 table7) throws EntityNotFoundException;

    /**
	 * Deletes a Table7.
	 *
	 * @param table7Id The id of the deleted Table7.
	 * @return The deleted Table7.
     *
	 * @throws EntityNotFoundException if no Table7 is found with the given id.
	 */
	Table7 delete(Integer table7Id) throws EntityNotFoundException;

	/**
	 * Finds all Table7s.
	 *
	 * @return A list of Table7s.
	 */
    @Deprecated
	Page<Table7> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Table7s.
	 * @return A list of Table7s.
	 */
    Page<Table7> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Table7s in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Table7.
	 */
	long count(String query);

    Page<Table7> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

