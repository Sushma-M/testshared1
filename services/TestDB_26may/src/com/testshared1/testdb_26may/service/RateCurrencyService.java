/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.RateCurrency;

/**
 * Service object for domain model class RateCurrency.
 *
 * @see {@link RateCurrency}
 */
public interface RateCurrencyService {

    /**
     * Creates a new RateCurrency.
     *
     * @param rateCurrency The information of the created CompositeTable.
     * @return The created RateCurrency.
     */
	RateCurrency create(RateCurrency rateCurrency);


	/**
	 * Finds RateCurrency by id.
	 *
	 * @param rateCurrencyId The id of the wanted RateCurrency.
	 * @return The found RateCurrency. If no RateCurrency is found, this method returns null.
	 */
	RateCurrency getById(Integer rateCurrencyId) throws EntityNotFoundException;

	/**
	 * Updates the information of a RateCurrency.
	 *
	 * @param rateCurrency The information of the updated RateCurrency.
	 * @return The updated RateCurrency.
     *
	 * @throws EntityNotFoundException if no RateCurrency is found with given id.
	 */
	RateCurrency update(RateCurrency rateCurrency) throws EntityNotFoundException;

    /**
	 * Deletes a RateCurrency.
	 *
	 * @param rateCurrencyId The id of the deleted RateCurrency.
	 * @return The deleted RateCurrency.
     *
	 * @throws EntityNotFoundException if no RateCurrency is found with the given id.
	 */
	RateCurrency delete(Integer rateCurrencyId) throws EntityNotFoundException;

	/**
	 * Finds all RateCurrencies.
	 *
	 * @return A list of RateCurrencies.
	 */
    @Deprecated
	Page<RateCurrency> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all RateCurrencies.
	 * @return A list of RateCurrencies.
	 */
    Page<RateCurrency> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the RateCurrencies in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the RateCurrency.
	 */
	long count(String query);

    Page<RateCurrency> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

