/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.Conf;

/**
 * Service object for domain model class Conf.
 *
 * @see {@link Conf}
 */
public interface ConfService {

    /**
     * Creates a new Conf.
     *
     * @param conf The information of the created CompositeTable.
     * @return The created Conf.
     */
	Conf create(Conf conf);


	/**
	 * Finds Conf by id.
	 *
	 * @param confId The id of the wanted Conf.
	 * @return The found Conf. If no Conf is found, this method returns null.
	 */
	Conf getById(Integer confId) throws EntityNotFoundException;

	/**
	 * Updates the information of a Conf.
	 *
	 * @param conf The information of the updated Conf.
	 * @return The updated Conf.
     *
	 * @throws EntityNotFoundException if no Conf is found with given id.
	 */
	Conf update(Conf conf) throws EntityNotFoundException;

    /**
	 * Deletes a Conf.
	 *
	 * @param confId The id of the deleted Conf.
	 * @return The deleted Conf.
     *
	 * @throws EntityNotFoundException if no Conf is found with the given id.
	 */
	Conf delete(Integer confId) throws EntityNotFoundException;

	/**
	 * Finds all Confs.
	 *
	 * @return A list of Confs.
	 */
    @Deprecated
	Page<Conf> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Confs.
	 * @return A list of Confs.
	 */
    Page<Conf> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Confs in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Conf.
	 */
	long count(String query);

    Page<Conf> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

