/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.CompensatoryDayDebit;

/**
 * Service object for domain model class CompensatoryDayDebit.
 *
 * @see {@link CompensatoryDayDebit}
 */
public interface CompensatoryDayDebitService {

    /**
     * Creates a new CompensatoryDayDebit.
     *
     * @param compensatoryDayDebit The information of the created CompositeTable.
     * @return The created CompensatoryDayDebit.
     */
	CompensatoryDayDebit create(CompensatoryDayDebit compensatoryDayDebit);


	/**
	 * Finds CompensatoryDayDebit by id.
	 *
	 * @param compensatoryDayDebitId The id of the wanted CompensatoryDayDebit.
	 * @return The found CompensatoryDayDebit. If no CompensatoryDayDebit is found, this method returns null.
	 */
	CompensatoryDayDebit getById(Integer compensatoryDayDebitId) throws EntityNotFoundException;

	/**
	 * Updates the information of a CompensatoryDayDebit.
	 *
	 * @param compensatoryDayDebit The information of the updated CompensatoryDayDebit.
	 * @return The updated CompensatoryDayDebit.
     *
	 * @throws EntityNotFoundException if no CompensatoryDayDebit is found with given id.
	 */
	CompensatoryDayDebit update(CompensatoryDayDebit compensatoryDayDebit) throws EntityNotFoundException;

    /**
	 * Deletes a CompensatoryDayDebit.
	 *
	 * @param compensatoryDayDebitId The id of the deleted CompensatoryDayDebit.
	 * @return The deleted CompensatoryDayDebit.
     *
	 * @throws EntityNotFoundException if no CompensatoryDayDebit is found with the given id.
	 */
	CompensatoryDayDebit delete(Integer compensatoryDayDebitId) throws EntityNotFoundException;

	/**
	 * Finds all CompensatoryDayDebits.
	 *
	 * @return A list of CompensatoryDayDebits.
	 */
    @Deprecated
	Page<CompensatoryDayDebit> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all CompensatoryDayDebits.
	 * @return A list of CompensatoryDayDebits.
	 */
    Page<CompensatoryDayDebit> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the CompensatoryDayDebits in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the CompensatoryDayDebit.
	 */
	long count(String query);

    Page<CompensatoryDayDebit> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

