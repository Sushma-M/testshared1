/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.IsrDetail;

/**
 * Service object for domain model class IsrDetail.
 *
 * @see {@link IsrDetail}
 */
public interface IsrDetailService {

    /**
     * Creates a new IsrDetail.
     *
     * @param isrDetail The information of the created CompositeTable.
     * @return The created IsrDetail.
     */
	IsrDetail create(IsrDetail isrDetail);


	/**
	 * Finds IsrDetail by id.
	 *
	 * @param isrDetailId The id of the wanted IsrDetail.
	 * @return The found IsrDetail. If no IsrDetail is found, this method returns null.
	 */
	IsrDetail getById(Integer isrDetailId) throws EntityNotFoundException;

	/**
	 * Updates the information of a IsrDetail.
	 *
	 * @param isrDetail The information of the updated IsrDetail.
	 * @return The updated IsrDetail.
     *
	 * @throws EntityNotFoundException if no IsrDetail is found with given id.
	 */
	IsrDetail update(IsrDetail isrDetail) throws EntityNotFoundException;

    /**
	 * Deletes a IsrDetail.
	 *
	 * @param isrDetailId The id of the deleted IsrDetail.
	 * @return The deleted IsrDetail.
     *
	 * @throws EntityNotFoundException if no IsrDetail is found with the given id.
	 */
	IsrDetail delete(Integer isrDetailId) throws EntityNotFoundException;

	/**
	 * Finds all IsrDetails.
	 *
	 * @return A list of IsrDetails.
	 */
    @Deprecated
	Page<IsrDetail> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all IsrDetails.
	 * @return A list of IsrDetails.
	 */
    Page<IsrDetail> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the IsrDetails in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the IsrDetail.
	 */
	long count(String query);

    Page<IsrDetail> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

