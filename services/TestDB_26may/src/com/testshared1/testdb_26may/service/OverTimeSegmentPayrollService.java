/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.OverTimeSegmentPayroll;

/**
 * Service object for domain model class OverTimeSegmentPayroll.
 *
 * @see {@link OverTimeSegmentPayroll}
 */
public interface OverTimeSegmentPayrollService {

    /**
     * Creates a new OverTimeSegmentPayroll.
     *
     * @param overTimeSegmentPayroll The information of the created CompositeTable.
     * @return The created OverTimeSegmentPayroll.
     */
	OverTimeSegmentPayroll create(OverTimeSegmentPayroll overTimeSegmentPayroll);


	/**
	 * Finds OverTimeSegmentPayroll by id.
	 *
	 * @param overTimeSegmentPayrollId The id of the wanted OverTimeSegmentPayroll.
	 * @return The found OverTimeSegmentPayroll. If no OverTimeSegmentPayroll is found, this method returns null.
	 */
	OverTimeSegmentPayroll getById(Integer overTimeSegmentPayrollId) throws EntityNotFoundException;

	/**
	 * Updates the information of a OverTimeSegmentPayroll.
	 *
	 * @param overTimeSegmentPayroll The information of the updated OverTimeSegmentPayroll.
	 * @return The updated OverTimeSegmentPayroll.
     *
	 * @throws EntityNotFoundException if no OverTimeSegmentPayroll is found with given id.
	 */
	OverTimeSegmentPayroll update(OverTimeSegmentPayroll overTimeSegmentPayroll) throws EntityNotFoundException;

    /**
	 * Deletes a OverTimeSegmentPayroll.
	 *
	 * @param overTimeSegmentPayrollId The id of the deleted OverTimeSegmentPayroll.
	 * @return The deleted OverTimeSegmentPayroll.
     *
	 * @throws EntityNotFoundException if no OverTimeSegmentPayroll is found with the given id.
	 */
	OverTimeSegmentPayroll delete(Integer overTimeSegmentPayrollId) throws EntityNotFoundException;

	/**
	 * Finds all OverTimeSegmentPayrolls.
	 *
	 * @return A list of OverTimeSegmentPayrolls.
	 */
    @Deprecated
	Page<OverTimeSegmentPayroll> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all OverTimeSegmentPayrolls.
	 * @return A list of OverTimeSegmentPayrolls.
	 */
    Page<OverTimeSegmentPayroll> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the OverTimeSegmentPayrolls in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the OverTimeSegmentPayroll.
	 */
	long count(String query);

    Page<OverTimeSegmentPayroll> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

