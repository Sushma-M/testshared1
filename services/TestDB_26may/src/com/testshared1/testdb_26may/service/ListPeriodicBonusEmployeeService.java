/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.ListPeriodicBonusEmployee;

/**
 * Service object for domain model class ListPeriodicBonusEmployee.
 *
 * @see {@link ListPeriodicBonusEmployee}
 */
public interface ListPeriodicBonusEmployeeService {

    /**
     * Creates a new ListPeriodicBonusEmployee.
     *
     * @param listPeriodicBonusEmployee The information of the created CompositeTable.
     * @return The created ListPeriodicBonusEmployee.
     */
	ListPeriodicBonusEmployee create(ListPeriodicBonusEmployee listPeriodicBonusEmployee);


	/**
	 * Finds ListPeriodicBonusEmployee by id.
	 *
	 * @param listPeriodicBonusEmployeeId The id of the wanted ListPeriodicBonusEmployee.
	 * @return The found ListPeriodicBonusEmployee. If no ListPeriodicBonusEmployee is found, this method returns null.
	 */
	ListPeriodicBonusEmployee getById(Integer listPeriodicBonusEmployeeId) throws EntityNotFoundException;

	/**
	 * Updates the information of a ListPeriodicBonusEmployee.
	 *
	 * @param listPeriodicBonusEmployee The information of the updated ListPeriodicBonusEmployee.
	 * @return The updated ListPeriodicBonusEmployee.
     *
	 * @throws EntityNotFoundException if no ListPeriodicBonusEmployee is found with given id.
	 */
	ListPeriodicBonusEmployee update(ListPeriodicBonusEmployee listPeriodicBonusEmployee) throws EntityNotFoundException;

    /**
	 * Deletes a ListPeriodicBonusEmployee.
	 *
	 * @param listPeriodicBonusEmployeeId The id of the deleted ListPeriodicBonusEmployee.
	 * @return The deleted ListPeriodicBonusEmployee.
     *
	 * @throws EntityNotFoundException if no ListPeriodicBonusEmployee is found with the given id.
	 */
	ListPeriodicBonusEmployee delete(Integer listPeriodicBonusEmployeeId) throws EntityNotFoundException;

	/**
	 * Finds all ListPeriodicBonusEmployees.
	 *
	 * @return A list of ListPeriodicBonusEmployees.
	 */
    @Deprecated
	Page<ListPeriodicBonusEmployee> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all ListPeriodicBonusEmployees.
	 * @return A list of ListPeriodicBonusEmployees.
	 */
    Page<ListPeriodicBonusEmployee> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the ListPeriodicBonusEmployees in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the ListPeriodicBonusEmployee.
	 */
	long count(String query);

    Page<ListPeriodicBonusEmployee> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

