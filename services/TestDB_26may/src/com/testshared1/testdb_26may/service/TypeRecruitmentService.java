/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.TypeRecruitment;

/**
 * Service object for domain model class TypeRecruitment.
 *
 * @see {@link TypeRecruitment}
 */
public interface TypeRecruitmentService {

    /**
     * Creates a new TypeRecruitment.
     *
     * @param typeRecruitment The information of the created CompositeTable.
     * @return The created TypeRecruitment.
     */
	TypeRecruitment create(TypeRecruitment typeRecruitment);


	/**
	 * Finds TypeRecruitment by id.
	 *
	 * @param typeRecruitmentId The id of the wanted TypeRecruitment.
	 * @return The found TypeRecruitment. If no TypeRecruitment is found, this method returns null.
	 */
	TypeRecruitment getById(Integer typeRecruitmentId) throws EntityNotFoundException;

	/**
	 * Updates the information of a TypeRecruitment.
	 *
	 * @param typeRecruitment The information of the updated TypeRecruitment.
	 * @return The updated TypeRecruitment.
     *
	 * @throws EntityNotFoundException if no TypeRecruitment is found with given id.
	 */
	TypeRecruitment update(TypeRecruitment typeRecruitment) throws EntityNotFoundException;

    /**
	 * Deletes a TypeRecruitment.
	 *
	 * @param typeRecruitmentId The id of the deleted TypeRecruitment.
	 * @return The deleted TypeRecruitment.
     *
	 * @throws EntityNotFoundException if no TypeRecruitment is found with the given id.
	 */
	TypeRecruitment delete(Integer typeRecruitmentId) throws EntityNotFoundException;

	/**
	 * Finds all TypeRecruitments.
	 *
	 * @return A list of TypeRecruitments.
	 */
    @Deprecated
	Page<TypeRecruitment> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all TypeRecruitments.
	 * @return A list of TypeRecruitments.
	 */
    Page<TypeRecruitment> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the TypeRecruitments in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the TypeRecruitment.
	 */
	long count(String query);

    Page<TypeRecruitment> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

