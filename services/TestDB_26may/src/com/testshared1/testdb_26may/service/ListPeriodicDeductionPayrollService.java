/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.ListPeriodicDeductionPayroll;

/**
 * Service object for domain model class ListPeriodicDeductionPayroll.
 *
 * @see {@link ListPeriodicDeductionPayroll}
 */
public interface ListPeriodicDeductionPayrollService {

    /**
     * Creates a new ListPeriodicDeductionPayroll.
     *
     * @param listPeriodicDeductionPayroll The information of the created CompositeTable.
     * @return The created ListPeriodicDeductionPayroll.
     */
	ListPeriodicDeductionPayroll create(ListPeriodicDeductionPayroll listPeriodicDeductionPayroll);


	/**
	 * Finds ListPeriodicDeductionPayroll by id.
	 *
	 * @param listPeriodicDeductionPayrollId The id of the wanted ListPeriodicDeductionPayroll.
	 * @return The found ListPeriodicDeductionPayroll. If no ListPeriodicDeductionPayroll is found, this method returns null.
	 */
	ListPeriodicDeductionPayroll getById(Integer listPeriodicDeductionPayrollId) throws EntityNotFoundException;

	/**
	 * Updates the information of a ListPeriodicDeductionPayroll.
	 *
	 * @param listPeriodicDeductionPayroll The information of the updated ListPeriodicDeductionPayroll.
	 * @return The updated ListPeriodicDeductionPayroll.
     *
	 * @throws EntityNotFoundException if no ListPeriodicDeductionPayroll is found with given id.
	 */
	ListPeriodicDeductionPayroll update(ListPeriodicDeductionPayroll listPeriodicDeductionPayroll) throws EntityNotFoundException;

    /**
	 * Deletes a ListPeriodicDeductionPayroll.
	 *
	 * @param listPeriodicDeductionPayrollId The id of the deleted ListPeriodicDeductionPayroll.
	 * @return The deleted ListPeriodicDeductionPayroll.
     *
	 * @throws EntityNotFoundException if no ListPeriodicDeductionPayroll is found with the given id.
	 */
	ListPeriodicDeductionPayroll delete(Integer listPeriodicDeductionPayrollId) throws EntityNotFoundException;

	/**
	 * Finds all ListPeriodicDeductionPayrolls.
	 *
	 * @return A list of ListPeriodicDeductionPayrolls.
	 */
    @Deprecated
	Page<ListPeriodicDeductionPayroll> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all ListPeriodicDeductionPayrolls.
	 * @return A list of ListPeriodicDeductionPayrolls.
	 */
    Page<ListPeriodicDeductionPayroll> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the ListPeriodicDeductionPayrolls in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the ListPeriodicDeductionPayroll.
	 */
	long count(String query);

    Page<ListPeriodicDeductionPayroll> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

