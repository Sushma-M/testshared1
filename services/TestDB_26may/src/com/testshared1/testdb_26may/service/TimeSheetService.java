/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.TimeSheet;

/**
 * Service object for domain model class TimeSheet.
 *
 * @see {@link TimeSheet}
 */
public interface TimeSheetService {

    /**
     * Creates a new TimeSheet.
     *
     * @param timeSheet The information of the created CompositeTable.
     * @return The created TimeSheet.
     */
	TimeSheet create(TimeSheet timeSheet);


	/**
	 * Finds TimeSheet by id.
	 *
	 * @param timeSheetId The id of the wanted TimeSheet.
	 * @return The found TimeSheet. If no TimeSheet is found, this method returns null.
	 */
	TimeSheet getById(Integer timeSheetId) throws EntityNotFoundException;

	/**
	 * Updates the information of a TimeSheet.
	 *
	 * @param timeSheet The information of the updated TimeSheet.
	 * @return The updated TimeSheet.
     *
	 * @throws EntityNotFoundException if no TimeSheet is found with given id.
	 */
	TimeSheet update(TimeSheet timeSheet) throws EntityNotFoundException;

    /**
	 * Deletes a TimeSheet.
	 *
	 * @param timeSheetId The id of the deleted TimeSheet.
	 * @return The deleted TimeSheet.
     *
	 * @throws EntityNotFoundException if no TimeSheet is found with the given id.
	 */
	TimeSheet delete(Integer timeSheetId) throws EntityNotFoundException;

	/**
	 * Finds all TimeSheets.
	 *
	 * @return A list of TimeSheets.
	 */
    @Deprecated
	Page<TimeSheet> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all TimeSheets.
	 * @return A list of TimeSheets.
	 */
    Page<TimeSheet> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the TimeSheets in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the TimeSheet.
	 */
	long count(String query);

    Page<TimeSheet> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

