/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.testshared1.testdb_26may.ListAssetLoaded;

/**
 * Service object for domain model class ListAssetLoaded.
 *
 * @see {@link ListAssetLoaded}
 */
public interface ListAssetLoadedService {

    /**
     * Creates a new ListAssetLoaded.
     *
     * @param listAssetLoaded The information of the created CompositeTable.
     * @return The created ListAssetLoaded.
     */
	ListAssetLoaded create(ListAssetLoaded listAssetLoaded);


	/**
	 * Finds ListAssetLoaded by id.
	 *
	 * @param listAssetLoadedId The id of the wanted ListAssetLoaded.
	 * @return The found ListAssetLoaded. If no ListAssetLoaded is found, this method returns null.
	 */
	ListAssetLoaded getById(Integer listAssetLoadedId) throws EntityNotFoundException;

	/**
	 * Updates the information of a ListAssetLoaded.
	 *
	 * @param listAssetLoaded The information of the updated ListAssetLoaded.
	 * @return The updated ListAssetLoaded.
     *
	 * @throws EntityNotFoundException if no ListAssetLoaded is found with given id.
	 */
	ListAssetLoaded update(ListAssetLoaded listAssetLoaded) throws EntityNotFoundException;

    /**
	 * Deletes a ListAssetLoaded.
	 *
	 * @param listAssetLoadedId The id of the deleted ListAssetLoaded.
	 * @return The deleted ListAssetLoaded.
     *
	 * @throws EntityNotFoundException if no ListAssetLoaded is found with the given id.
	 */
	ListAssetLoaded delete(Integer listAssetLoadedId) throws EntityNotFoundException;

	/**
	 * Finds all ListAssetLoadeds.
	 *
	 * @return A list of ListAssetLoadeds.
	 */
    @Deprecated
	Page<ListAssetLoaded> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all ListAssetLoadeds.
	 * @return A list of ListAssetLoadeds.
	 */
    Page<ListAssetLoaded> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the ListAssetLoadeds in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the ListAssetLoaded.
	 */
	long count(String query);

    Page<ListAssetLoaded> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

