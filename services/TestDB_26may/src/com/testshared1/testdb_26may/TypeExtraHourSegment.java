/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TypeExtraHourSegment generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`type_extra_hour_segment`")
public class TypeExtraHourSegment implements Serializable {

    private Integer idTypeExtraHourSegment;
    private Date startTime;
    private Date endTime;
    private Double rate;
    private String observation;
    private Currency currency;
    private List<OverTimeSegmentPayroll> overTimeSegmentPayrolls = new ArrayList<>();

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_type_extra_hour_segment`", nullable = false, scale = 0, precision = 10)
    public Integer getIdTypeExtraHourSegment() {
        return this.idTypeExtraHourSegment;
    }

    public void setIdTypeExtraHourSegment(Integer idTypeExtraHourSegment) {
        this.idTypeExtraHourSegment = idTypeExtraHourSegment;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "`start_time`", nullable = false)
    public Date getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "`end_time`", nullable = false)
    public Date getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    @Column(name = "`rate`", nullable = false, scale = 4, precision = 19)
    public Double getRate() {
        return this.rate;
    }

    public void setRate(Double rate) {
        this.rate = rate;
    }

    @Column(name = "`observation`", nullable = false, length = 50)
    public String getObservation() {
        return this.observation;
    }

    public void setObservation(String observation) {
        this.observation = observation;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_currency`", referencedColumnName = "`id_currency`", insertable = true, updatable = true)
    public Currency getCurrency() {
        return this.currency;
    }

    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "typeExtraHourSegment")
    public List<OverTimeSegmentPayroll> getOverTimeSegmentPayrolls() {
        return this.overTimeSegmentPayrolls;
    }

    public void setOverTimeSegmentPayrolls(List<OverTimeSegmentPayroll> overTimeSegmentPayrolls) {
        this.overTimeSegmentPayrolls = overTimeSegmentPayrolls;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TypeExtraHourSegment)) return false;
        final TypeExtraHourSegment typeExtraHourSegment = (TypeExtraHourSegment) o;
        return Objects.equals(getIdTypeExtraHourSegment(), typeExtraHourSegment.getIdTypeExtraHourSegment());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdTypeExtraHourSegment());
    }
}

