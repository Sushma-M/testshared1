/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * EmployeeWorkProof generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`employee_work_proof`", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`uuid`"})})
public class EmployeeWorkProof implements Serializable {

    private Integer idEmployeeWorkProof;
    private String uuid;
    private Date imprintDate;
    private Integer userDevelopment;
    private String cetificationText;
    private Integer userLocation;
    private Integer userMode;
    private Date userFecha;
    private Employee employee;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_employee_work_proof`", nullable = false, scale = 0, precision = 10)
    public Integer getIdEmployeeWorkProof() {
        return this.idEmployeeWorkProof;
    }

    public void setIdEmployeeWorkProof(Integer idEmployeeWorkProof) {
        this.idEmployeeWorkProof = idEmployeeWorkProof;
    }

    @Column(name = "`uuid`", nullable = false, length = 36)
    public String getUuid() {
        return this.uuid;
    }

    public void setUuid(String uuid) {
        this.uuid = uuid;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`imprint_date`", nullable = false)
    public Date getImprintDate() {
        return this.imprintDate;
    }

    public void setImprintDate(Date imprintDate) {
        this.imprintDate = imprintDate;
    }

    @Column(name = "`user_development`", nullable = false, scale = 0, precision = 10)
    public Integer getUserDevelopment() {
        return this.userDevelopment;
    }

    public void setUserDevelopment(Integer userDevelopment) {
        this.userDevelopment = userDevelopment;
    }

    @Column(name = "`cetification_text`", nullable = false, length = 4096)
    public String getCetificationText() {
        return this.cetificationText;
    }

    public void setCetificationText(String cetificationText) {
        this.cetificationText = cetificationText;
    }

    @Column(name = "`user_location`", nullable = false, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_employee`", referencedColumnName = "`id_employee`", insertable = true, updatable = true)
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof EmployeeWorkProof)) return false;
        final EmployeeWorkProof employeeWorkProof = (EmployeeWorkProof) o;
        return Objects.equals(getIdEmployeeWorkProof(), employeeWorkProof.getIdEmployeeWorkProof());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdEmployeeWorkProof());
    }
}

