/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Currency generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`currency`")
public class Currency implements Serializable {

    private Integer idCurrency;
    private Boolean enable;
    private String nombre;
    private String name;
    private String iso;
    private Integer userMode;
    private Date userFecha;
    private List<ListLoanDetailPayroll> listLoanDetailPayrolls = new ArrayList<>();
    private List<ListCommissionPayroll> listCommissionPayrolls = new ArrayList<>();
    private List<IsrDetail> isrDetails = new ArrayList<>();
    private List<DeductionPeriodic> deductionPeriodics = new ArrayList<>();
    private List<TravelExpense> travelExpenses = new ArrayList<>();
    private List<ListPeriodicBonusEmployee> listPeriodicBonusEmployees = new ArrayList<>();
    private List<ListPeriodicDeductionPayroll> listPeriodicDeductionPayrolls = new ArrayList<>();
    private List<Loan> loans = new ArrayList<>();
    private List<PaymentLoanManual> paymentLoanManuals = new ArrayList<>();
    private List<EmployeeSalary> employeeSalaries = new ArrayList<>();
    private List<ListCelphoneDetailPayroll> listCelphoneDetailPayrolls = new ArrayList<>();
    private List<Payroll> payrolls = new ArrayList<>();
    private List<TypeExtraHourSegment> typeExtraHourSegments = new ArrayList<>();
    private List<BonusEventual> bonusEventuals = new ArrayList<>();
    private List<ListPeriodicDeductionEmployee> listPeriodicDeductionEmployees = new ArrayList<>();
    private List<ListPeriodicBonusPayroll> listPeriodicBonusPayrolls = new ArrayList<>();
    private List<DeductionEventual> deductionEventuals = new ArrayList<>();
    private List<BonusPeriodic> bonusPeriodics = new ArrayList<>();
    private List<OverTimeSegmentPayroll> overTimeSegmentPayrolls = new ArrayList<>();
    private List<ListOvertimePayroll> listOvertimePayrolls = new ArrayList<>();
    private List<ListTravelExpenseDetail> listTravelExpenseDetails = new ArrayList<>();
    private List<PayrollDetail> payrollDetails = new ArrayList<>();
    private List<ListEmployeePhone> listEmployeePhones = new ArrayList<>();
    private List<MobileNumber> mobileNumbers = new ArrayList<>();
    private List<ListCommissionEmployee> listCommissionEmployees = new ArrayList<>();

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_currency`", nullable = false, scale = 0, precision = 10)
    public Integer getIdCurrency() {
        return this.idCurrency;
    }

    public void setIdCurrency(Integer idCurrency) {
        this.idCurrency = idCurrency;
    }

    @Column(name = "`enable`", nullable = false)
    public Boolean isEnable() {
        return this.enable;
    }

    public void setEnable(Boolean enable) {
        this.enable = enable;
    }

    @Column(name = "`nombre`", nullable = false, length = 50)
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Column(name = "`name`", nullable = false, length = 50)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "`iso`", nullable = true, length = 3)
    public String getIso() {
        return this.iso;
    }

    public void setIso(String iso) {
        this.iso = iso;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<ListLoanDetailPayroll> getListLoanDetailPayrolls() {
        return this.listLoanDetailPayrolls;
    }

    public void setListLoanDetailPayrolls(List<ListLoanDetailPayroll> listLoanDetailPayrolls) {
        this.listLoanDetailPayrolls = listLoanDetailPayrolls;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<ListCommissionPayroll> getListCommissionPayrolls() {
        return this.listCommissionPayrolls;
    }

    public void setListCommissionPayrolls(List<ListCommissionPayroll> listCommissionPayrolls) {
        this.listCommissionPayrolls = listCommissionPayrolls;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<IsrDetail> getIsrDetails() {
        return this.isrDetails;
    }

    public void setIsrDetails(List<IsrDetail> isrDetails) {
        this.isrDetails = isrDetails;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<DeductionPeriodic> getDeductionPeriodics() {
        return this.deductionPeriodics;
    }

    public void setDeductionPeriodics(List<DeductionPeriodic> deductionPeriodics) {
        this.deductionPeriodics = deductionPeriodics;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<TravelExpense> getTravelExpenses() {
        return this.travelExpenses;
    }

    public void setTravelExpenses(List<TravelExpense> travelExpenses) {
        this.travelExpenses = travelExpenses;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<ListPeriodicBonusEmployee> getListPeriodicBonusEmployees() {
        return this.listPeriodicBonusEmployees;
    }

    public void setListPeriodicBonusEmployees(List<ListPeriodicBonusEmployee> listPeriodicBonusEmployees) {
        this.listPeriodicBonusEmployees = listPeriodicBonusEmployees;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<ListPeriodicDeductionPayroll> getListPeriodicDeductionPayrolls() {
        return this.listPeriodicDeductionPayrolls;
    }

    public void setListPeriodicDeductionPayrolls(List<ListPeriodicDeductionPayroll> listPeriodicDeductionPayrolls) {
        this.listPeriodicDeductionPayrolls = listPeriodicDeductionPayrolls;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<Loan> getLoans() {
        return this.loans;
    }

    public void setLoans(List<Loan> loans) {
        this.loans = loans;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<PaymentLoanManual> getPaymentLoanManuals() {
        return this.paymentLoanManuals;
    }

    public void setPaymentLoanManuals(List<PaymentLoanManual> paymentLoanManuals) {
        this.paymentLoanManuals = paymentLoanManuals;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<EmployeeSalary> getEmployeeSalaries() {
        return this.employeeSalaries;
    }

    public void setEmployeeSalaries(List<EmployeeSalary> employeeSalaries) {
        this.employeeSalaries = employeeSalaries;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<ListCelphoneDetailPayroll> getListCelphoneDetailPayrolls() {
        return this.listCelphoneDetailPayrolls;
    }

    public void setListCelphoneDetailPayrolls(List<ListCelphoneDetailPayroll> listCelphoneDetailPayrolls) {
        this.listCelphoneDetailPayrolls = listCelphoneDetailPayrolls;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<Payroll> getPayrolls() {
        return this.payrolls;
    }

    public void setPayrolls(List<Payroll> payrolls) {
        this.payrolls = payrolls;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<TypeExtraHourSegment> getTypeExtraHourSegments() {
        return this.typeExtraHourSegments;
    }

    public void setTypeExtraHourSegments(List<TypeExtraHourSegment> typeExtraHourSegments) {
        this.typeExtraHourSegments = typeExtraHourSegments;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<BonusEventual> getBonusEventuals() {
        return this.bonusEventuals;
    }

    public void setBonusEventuals(List<BonusEventual> bonusEventuals) {
        this.bonusEventuals = bonusEventuals;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<ListPeriodicDeductionEmployee> getListPeriodicDeductionEmployees() {
        return this.listPeriodicDeductionEmployees;
    }

    public void setListPeriodicDeductionEmployees(List<ListPeriodicDeductionEmployee> listPeriodicDeductionEmployees) {
        this.listPeriodicDeductionEmployees = listPeriodicDeductionEmployees;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<ListPeriodicBonusPayroll> getListPeriodicBonusPayrolls() {
        return this.listPeriodicBonusPayrolls;
    }

    public void setListPeriodicBonusPayrolls(List<ListPeriodicBonusPayroll> listPeriodicBonusPayrolls) {
        this.listPeriodicBonusPayrolls = listPeriodicBonusPayrolls;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<DeductionEventual> getDeductionEventuals() {
        return this.deductionEventuals;
    }

    public void setDeductionEventuals(List<DeductionEventual> deductionEventuals) {
        this.deductionEventuals = deductionEventuals;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<BonusPeriodic> getBonusPeriodics() {
        return this.bonusPeriodics;
    }

    public void setBonusPeriodics(List<BonusPeriodic> bonusPeriodics) {
        this.bonusPeriodics = bonusPeriodics;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<OverTimeSegmentPayroll> getOverTimeSegmentPayrolls() {
        return this.overTimeSegmentPayrolls;
    }

    public void setOverTimeSegmentPayrolls(List<OverTimeSegmentPayroll> overTimeSegmentPayrolls) {
        this.overTimeSegmentPayrolls = overTimeSegmentPayrolls;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<ListOvertimePayroll> getListOvertimePayrolls() {
        return this.listOvertimePayrolls;
    }

    public void setListOvertimePayrolls(List<ListOvertimePayroll> listOvertimePayrolls) {
        this.listOvertimePayrolls = listOvertimePayrolls;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<ListTravelExpenseDetail> getListTravelExpenseDetails() {
        return this.listTravelExpenseDetails;
    }

    public void setListTravelExpenseDetails(List<ListTravelExpenseDetail> listTravelExpenseDetails) {
        this.listTravelExpenseDetails = listTravelExpenseDetails;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<PayrollDetail> getPayrollDetails() {
        return this.payrollDetails;
    }

    public void setPayrollDetails(List<PayrollDetail> payrollDetails) {
        this.payrollDetails = payrollDetails;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<ListEmployeePhone> getListEmployeePhones() {
        return this.listEmployeePhones;
    }

    public void setListEmployeePhones(List<ListEmployeePhone> listEmployeePhones) {
        this.listEmployeePhones = listEmployeePhones;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<MobileNumber> getMobileNumbers() {
        return this.mobileNumbers;
    }

    public void setMobileNumbers(List<MobileNumber> mobileNumbers) {
        this.mobileNumbers = mobileNumbers;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "currency")
    public List<ListCommissionEmployee> getListCommissionEmployees() {
        return this.listCommissionEmployees;
    }

    public void setListCommissionEmployees(List<ListCommissionEmployee> listCommissionEmployees) {
        this.listCommissionEmployees = listCommissionEmployees;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Currency)) return false;
        final Currency currency = (Currency) o;
        return Objects.equals(getIdCurrency(), currency.getIdCurrency());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdCurrency());
    }
}

