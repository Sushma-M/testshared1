/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AssetPhotoFile generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`asset_photo_file`")
public class AssetPhotoFile implements Serializable {

    private Integer idAssetPhotoFile;
    private Boolean mainPhoto;
    private String fileName;
    private String mimeType;
    private String description_;
    private String filePath;
    private Integer userLocation;
    private Integer userMode;
    private Date userFecha;
    private Asset asset;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_asset_photo_file`", nullable = false, scale = 0, precision = 10)
    public Integer getIdAssetPhotoFile() {
        return this.idAssetPhotoFile;
    }

    public void setIdAssetPhotoFile(Integer idAssetPhotoFile) {
        this.idAssetPhotoFile = idAssetPhotoFile;
    }

    @Column(name = "`main_photo`", nullable = false)
    public Boolean isMainPhoto() {
        return this.mainPhoto;
    }

    public void setMainPhoto(Boolean mainPhoto) {
        this.mainPhoto = mainPhoto;
    }

    @Column(name = "`file_name`", nullable = false, length = 150)
    public String getFileName() {
        return this.fileName;
    }

    public void setFileName(String fileName) {
        this.fileName = fileName;
    }

    @Column(name = "`mime_type`", nullable = false, length = 150)
    public String getMimeType() {
        return this.mimeType;
    }

    public void setMimeType(String mimeType) {
        this.mimeType = mimeType;
    }

    @Column(name = "`description?`", nullable = false, length = 150)
    public String getDescription_() {
        return this.description_;
    }

    public void setDescription_(String description_) {
        this.description_ = description_;
    }

    @Column(name = "`file_path`", nullable = false, length = 255)
    public String getFilePath() {
        return this.filePath;
    }

    public void setFilePath(String filePath) {
        this.filePath = filePath;
    }

    @Column(name = "`user_location`", nullable = false, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Column(name = "`user_mode`", nullable = false, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = false)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_asset`", referencedColumnName = "`id_asset`", insertable = true, updatable = true)
    public Asset getAsset() {
        return this.asset;
    }

    public void setAsset(Asset asset) {
        this.asset = asset;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AssetPhotoFile)) return false;
        final AssetPhotoFile assetPhotoFile = (AssetPhotoFile) o;
        return Objects.equals(getIdAssetPhotoFile(), assetPhotoFile.getIdAssetPhotoFile());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdAssetPhotoFile());
    }
}

