/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.testshared1.testdb_26may;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TravelEmployee generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`travel_employee`")
public class TravelEmployee implements Serializable {

    private Integer idTravelEmployee;
    private String tripPurpose;
    private Integer userMode;
    private Integer userLocation;
    private Date userFecha;
    private List<TravelExpense> travelExpenses = new ArrayList<>();
    private Employee employee;
    private Viaje viaje;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id_travel_employee`", nullable = false, scale = 0, precision = 10)
    public Integer getIdTravelEmployee() {
        return this.idTravelEmployee;
    }

    public void setIdTravelEmployee(Integer idTravelEmployee) {
        this.idTravelEmployee = idTravelEmployee;
    }

    @Column(name = "`trip_purpose`", nullable = true, length = 255)
    public String getTripPurpose() {
        return this.tripPurpose;
    }

    public void setTripPurpose(String tripPurpose) {
        this.tripPurpose = tripPurpose;
    }

    @Column(name = "`user_mode`", nullable = true, scale = 0, precision = 10)
    public Integer getUserMode() {
        return this.userMode;
    }

    public void setUserMode(Integer userMode) {
        this.userMode = userMode;
    }

    @Column(name = "`user_location`", nullable = true, scale = 0, precision = 10)
    public Integer getUserLocation() {
        return this.userLocation;
    }

    public void setUserLocation(Integer userLocation) {
        this.userLocation = userLocation;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`user_fecha`", nullable = true)
    public Date getUserFecha() {
        return this.userFecha;
    }

    public void setUserFecha(Date userFecha) {
        this.userFecha = userFecha;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "travelEmployee")
    public List<TravelExpense> getTravelExpenses() {
        return this.travelExpenses;
    }

    public void setTravelExpenses(List<TravelExpense> travelExpenses) {
        this.travelExpenses = travelExpenses;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_employee`", referencedColumnName = "`id_employee`", insertable = true, updatable = true)
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`fk_travel`", referencedColumnName = "`id_travel`", insertable = true, updatable = true)
    public Viaje getViaje() {
        return this.viaje;
    }

    public void setViaje(Viaje viaje) {
        this.viaje = viaje;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TravelEmployee)) return false;
        final TravelEmployee travelEmployee = (TravelEmployee) o;
        return Objects.equals(getIdTravelEmployee(), travelEmployee.getIdTravelEmployee());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getIdTravelEmployee());
    }
}

